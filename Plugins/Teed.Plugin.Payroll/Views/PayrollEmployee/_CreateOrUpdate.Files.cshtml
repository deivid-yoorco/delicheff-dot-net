@model Teed.Plugin.Payroll.Models.PayrollEmployee.CreateOrUpdateModel

@using Nop.Core.Domain.Catalog;
@using Nop.Services.Catalog;
@using System.Text;
@using System.Text.Encodings.Web
@using Nop.Services
@using Nop.Services.Stores
@using Teed.Plugin.Payroll.Domain.PayrollEmployees

<style>
    @@import url(https://fonts.googleapis.com/css?family=Roboto:100);

    [data-fileid] {
        text-align: center;
    }

        [data-fileid] .file-spinner {
            display: inline-block;
            width: 50px;
            height: 50px;
            border: 3px solid rgba(255,255,255,.3);
            border-radius: 50%;
            border-top-color: #3c8dbc;
            animation: spin 1s ease-in-out infinite;
            -webkit-animation: spin 1s ease-in-out infinite;
        }

    @@keyframes spin {
        to {
            -webkit-transform: rotate(360deg);
        }
    }

    @@-webkit-keyframes spin {
        to {
            -webkit-transform: rotate(360deg);
        }
    }
</style>
<div class="panel-group">
    @if (Model.Id > 0)
    {
        <div class="panel panel-default">
            <div class="panel-body">
                <h3 style="text-align: center;margin-top: 0px !important;margin-bottom: 20px !important;">Archivos de expediente</h3>
                <div id="files-grid"></div>

                <script type="text/javascript">
                    $(document).ready(function() {
                        $("#files-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("EmployeeFileList", "PayrollEmployee", new { payrollId = Model.Id }))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    },
                                    update: {
                                        url: "@Html.Raw(Url.Action("EmployeeFileUpdate", "PayrollEmployee"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    },
                                    destroy: {
                                        url: "@Html.Raw(Url.Action("EmployeeFileDelete", "PayrollEmployee"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "Id",
                                        fields: {
                                            Title: { editable: true, type: "string" },
                                            Description: { editable: true, type: "string" },
                                            FileType: { editable: false, type: "string" },
                                        }
                                    }
                                },
                                requestEnd: function(e) {
                                    if (e.type == "update") {
                                        this.read();
                                    }
                                },
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                numeric: false,
                                previousNext: false,
                                info: false,
                                @await Html.PartialAsync("_GridPagerMessages")
                            },
                            editable: {
                                confirmation: "confirmar",
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [
                            //{
                            //        field: "Thumbnail",
                            //        title: "Archivo",
                            //        menubar: false,
                            //        template: '# if(id == "0") {# <h4>Sin Archivo</h4> #} else {# <iframe src="data:application/pdf;base64, #=Thumbnail#" type="application/pdf" width="50%" height="100px" frameborder="0" scrolling="no"/></iframe> #} #'
                            //    },
                                {
                                    field: "Thumbnail",
                                    title: "Archivo",
                                    menubar: false,
                                    template: '<div data-fileid="#=Id#"><div class="file-spinner"></div></div>',
                                    width: 500
                                },
                                {
                                field: "FileType",
                                title: "Tipo de archivo",
                                width: 150
                            }, {
                                field: "Id",
                                template: "<span data-id='#=Id#'></span>",
                                hidden: true
                                },
                            //{
                            //    field: "Title",
                            //    title: "Titulo",
                            //    width: 200
                            //}, {
                            //    field: "Description",
                            //    title: "Descripción",
                            //    width: 150
                            //},
                            {
                                command: [
                                {
                                    name: "download",
                                    text: "Descargar",
                                    className: "download-file",
                                }, {
                                    name: "edit",
                                    text: {
                                        edit: "Editar",
                                        update: "Actualizar",
                                        cancel: "Cancelar"
                                    }
                                }, {
                                    name: "destroy",
                                    text: "Borrar"
                                }
                                ],
                                width: 200
                            }
                            ],
                            dataBound: function (e) {
                                $("#files-grid tbody tr").each(function (i, e) {
                                    var id = $(e).find('td span[data-id]').data('id');
                                    if (id == "0") {
                                        $(e).find('.k-button').remove();
                                        $(e).find('td').last().append('<span style="color: red;font-weight: bold;">Pendiente</span>');
                                        $(e).find('td').last().css('text-align', 'center');
                                    }
                                });
                                  $('.download-file').click(function () {
                                      var $button = $(this);
                                    $(this).attr('disabled', true);
                                    var id = $(this).parentsUntil('tbody').last().find('[role="gridcell"] span').first().data('id');
                                    $.ajax({
                                        cache: false,
                                        type: "GET",
                                        url: "@(Url.Action("EmployeeFileDownload", "PayrollEmployee"))?id=" + id,
                                        success: function (data) {
                                            console.log(data);
                                            $button.attr('disabled', false);
                                            // Create "a" element
                                            var a = window.document.createElement('a');
                                            // Convert to blob
                                            var blob = new Blob([s2ab(atob(data.FileArray))], {
                                                type: ''
                                            });
                                            a.href = window.URL.createObjectURL(blob);
                                            // Supply fileName
                                            a.download = data.Title + "." +
                                                data.Extension;
                                            // Add to count for better name
                                            document.body.appendChild(a);
                                            // Click "a" for download
                                            a.click();
                                            document.body.removeChild(a);
                                        },
                                        error: function (xhr, ajaxOptions, thrownError) {
                                            console.log(thrownError);
                                            $button.attr('disabled', false);
                                        }
                                    });
                                  });
                                var currentFileCount = 0;
                                $('[data-fileid]').each(function (i, e) {
                                    var id = $(e).data('fileid');
                                    var index = i;
                                    var interval = setInterval(function () {
                                        if (id != '0' && id != 0) {
                                            if (index == currentFileCount) {
                                                $.ajax({
                                                    cache: false,
                                                    type: "GET",
                                                    url: "@Html.Raw(Url.Action("EmployeeFileGet", "PayrollEmployee"))/" + id,
                                                    success: function (data) {
                                                        $('[data-fileid="' + id + '"]').html('<iframe src="data:application/pdf;base64, ' + data + '" width="100%" height="150px" frameborder="0" scrolling="no"/>');
                                                        currentFileCount++;
                                                    },
                                                    error: function (err) {
                                                        $('[data-fileid="' + id + '"]').hide();
                                                        console.log(err);
                                                        currentFileCount++;
                                                    }
                                                });
                                                clearInterval(interval);
                                            }
                                        } else {
                                            $($('[data-fileid="' + id + '"]')[index]).hide();
                                            currentFileCount++;
                                            clearInterval(interval);
                                        }
                                    }, 1);
                                });
                              }
                        });
                    });
                </script>
            </div>
            <a name="DownloadZip" class="btn btn-success" href="@Url.Action("DownloadZip", "PayrollEmployee", new {payrollId = Model.Id})">
                <i class="fa fa-download"></i>
                Descargar todos los documentos
            </a>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">
                Agregar archivo
            </div>
            <div class="panel-body">
                <script type="text/javascript">
                    $(document).ready(function() {
                        $('#addEmployeeFile').click(function() {
                            $('.file-error').hide();
                            //var description = $("#@Html.IdFor(model => model.AddEmployeeFile.Description)").val();
                            var extension = $("#@Html.IdFor(model => model.AddEmployeeFile.Extension)").val();
                            var file = $("#FileInput")[0].files[0];
                            var fileMimeType = $("#@Html.IdFor(model => model.AddEmployeeFile.FileMimeType)").val();
                            var fileType = $("#@Html.IdFor(model => model.FileType)").val();
                            var size = $("#@Html.IdFor(model => model.AddEmployeeFile.Size)").val();
                            //var title = $("#@Html.IdFor(model => model.AddEmployeeFile.Title)").val();

                            if (
                                //== "" || typeof description == 'undefined' ||
                                file == "" || typeof file == 'undefined' ||
                                fileType == "" || typeof fileType == 'undefined'
                                //|| title == "" || typeof title == 'undefined'
                                ) {
                                $('.file-error').show();
                                return false;
                            }

                            $('#addEmployeeFile').attr('disabled', true);

                            var postData = {
                                //description: description,
                                extension: extension,
                                file: file,
                                fileMimeType: fileMimeType,
                                fileType: fileType,
                                size: size,
                                //title: title,
                                payrollEmployeeId: @Model.Id,
                                };
                            addAntiForgeryToken(postData);
                            var formData = new FormData();
                            $.each(postData, function (name, value) {
                                formData.append(name, value);
                            });

                            $.ajax({
                                contentType: false,
                                processData: false,
                                type: "POST",
                                url: "@(Url.Action("EmployeeFileAdd", "PayrollEmployee"))",
                                data: formData,
                                success: function(data) {
                                    var grid = $("#files-grid");
                                    grid.data('kendoGrid').dataSource.read();
                                    $('#addEmployeeFile').attr('disabled', false);
                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    alert('Failed to add employee file.');
                                    $('#addEmployeeFile').attr('disabled', false);
                                }
                            });
                        });
                    });
                    function s2ab(s) {
                        var buf = new ArrayBuffer(s.length);
                        var view = new Uint8Array(buf);
                        for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
                        return buf;
                    }
                </script>
                <div class="form-group">
                    <div class="col-md-3">
                        <div class="label-wrapper">
                            <label class="control-label">Archivo</label>
                        </div>
                    </div>
                    <div class="col-md-9">
                        <input class="form-control text-box single-line" type="file" id="FileInput">
                    </div>
                </div>
                @*<div class="form-group">
                        <div class="col-md-3">
                            <nop-label asp-for="AddEmployeeFile.Title" />
                        </div>
                        <div class="col-md-9">
                            <nop-editor asp-for="AddEmployeeFile.Title" />
                            <span asp-validation-for="AddEmployeeFile.Title"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <nop-label asp-for="AddEmployeeFile.Description" />
                        </div>
                        <div class="col-md-9">
                            <nop-editor asp-for="AddEmployeeFile.Description" />
                            <span asp-validation-for="AddEmployeeFile.Description"></span>
                        </div>
                    </div>*@
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-label asp-for="FileType" />
                    </div>
                    <div class="col-md-9">
                        <nop-select asp-for="FileType" asp-items="@(Model.FileTypes)" />
                        <span asp-validation-for="FileType"></span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-3 col-md-9 file-error" style="color: red;display: none;margin-bottom: 10px;">
                    Todos los campos son requeridos para agregar un nuevo archivo
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-9 col-md-offset-3" style="margin-bottom: 10px;">
                    <button type="button" id="addEmployeeFile" class="btn btn-primary">Agregar archivo al expediente</button>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="panel panel-default">
            <div class="panel-body">
                You need to save the employee before you can add tier prices for this employee page.
            </div>
        </div>
    }
</div>