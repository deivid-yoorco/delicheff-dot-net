@model Teed.Plugin.Payroll.Models.BiweeklyPayment.CreateOrUpdateModel
@using Nop.Services.Helpers
@using Teed.Plugin.Payroll.Domain.BiweeklyPayments
@inject Nop.Core.Domain.Common.AdminAreaSettings adminAreaSettings
@{
    Layout = "_AdminLayout";
    Html.SetActiveMenuItemSystemName("Payroll.BiweeklyPayment");
    var gridPageSizes = adminAreaSettings.GridPageSizes;
    var defaultGridPageSize = adminAreaSettings.DefaultGridPageSize;
    var controllerName = "BiweeklyPayment";
    var fileTypes = Enum.GetValues(typeof(PaymentFileType)).Cast<PaymentFileType>();
}
<div class="content-header clearfix">
    <h1 class="pull-left">
        Nómina quincenal del empleado @Model.EmployeeName - @Model.Date
        <small>
            <i class="fa fa-arrow-circle-left"></i>
            <a href="PaymentsOfDate?date=@Model.Date">regresar a la lista de fechas</a>
        </small>
    </h1>
</div>
<div class="content">
    <div class="form-horizontal">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row" style="margin: 1em">
                    <div class="col-md-3" style="margin-bottom: 15px;text-align: center;">
                        <h4 style="margin-top: 40px;">
                            <strong class="paid-as">Total bruto:</strong>
                            <br />@(Model.NetIncome.ToString("C"))
                        </h4>
                    </div>
                    <div class="col-md-3" style="margin-bottom: 15px; margin-top: 40px;">
                        <h4 style="text-align: center;">
                            <strong class="paid-as">Incidencias a descontar esta quincena:</strong>
                            <br />-@(Model.IncidentsTotal.ToString("C"))
                        </h4>
                        <div class="col-md-12">
                            @if (Model.IncidentsBiweek.Count > 0)
                            {
                                <h5 style="margin-top: 15px;">
                                    <strong>- Lista de incidencias descontadas esta quincena:</strong>
                                    <ul>
                                        @foreach (var incident in Model.IncidentsBiweek)
                                        {
                                            <li>@incident</li>
                                        }
                                    </ul>
                                </h5>
                            }
                            @if (Model.IncidentsPending.Count > 0)
                            {
                                <h5 style="margin-top: 15px;">
                                    <strong>- Incidencias pendientes por descontar:</strong>
                                    <ul>
                                        @foreach (var incident in Model.IncidentsPending)
                                        {
                                            <li>@incident</li>
                                        }
                                    </ul>
                                </h5>
                            }
                        </div>
                    </div>
                    <div class="col-md-3" style="margin-bottom: 15px;text-align: center;">
                        <h4 style="margin-top: 40px;">
                            <strong class="paid-as">Total de bonos:</strong>
                            <br />@(Model.BonusesTotal.ToString("C"))
                        </h4>
                        <div class="col-md-12">
                            @if (Model.BonusesBiweek.Count > 0)
                            {
                                <h5 style="margin-top: 15px;">
                                    <strong>- Lista de incidencias descontadas esta quincena:</strong>
                                    <ul>
                                        @foreach (var bonus in Model.BonusesBiweek)
                                        {
                                            <li>@bonus</li>
                                        }
                                    </ul>
                                </h5>
                            }
                        </div>
                    </div>
                    <div class="col-md-3" style="margin-bottom: 15px;text-align: center;">
                        <h4 style="margin-top: 40px;">
                            <strong class="paid-as">Total neto:</strong>
                            <br />@(Model.Total.ToString("C"))
                        </h4>
                    </div>
                    <div class="col-md-12" style="margin-top: 20px; display: flex;">
                        @if (Model.Id > 0)
                        {
                            <h4>
                                <strong>Estatus: Pagado</strong>
                            </h4>
                        }
                        else
                        {
                            <h4>
                                <strong>Estatus: Por Pagar</strong>
                            </h4>
                        }
                        @if (!Model.CannotBePaid)
                        {
                            if (Model.Paid)
                            {
                                <button type="button" id="markPayment" class="btn btn-primary" style="margin-left: auto;" onclick="markPayment(false)">Marcar como no pagado</button>
                            }
                            else
                            {
                                <button type="button" id="markPayment" class="btn btn-primary" style="margin-left: auto;" onclick="markPayment(true)">Marcar como pagado</button>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-body">
                <h3 style="margin-top: 20px;text-align: center;">
                    <strong class="paid-as">Archivos de nómina</strong>
                </h3>
                <div class="row" style="margin: 1em">
                    @foreach (var fileType in fileTypes)
                    {
                        @if (!Model.BiweeklyPaymentFiles?.Where(x => x.PaymentFileType == fileType).Any() ?? true)
                        {
                            <div class="col-md-6" style="text-align: center;">
                                <h4 style="margin-bottom:0">@fileType.GetDisplayName()</h4>
                                <strong style="color: red;">Pendiente</strong><br />
                            </div>
                        }
                    }
                    @if (Model.BiweeklyPaymentFiles != null)
                    {
                        @foreach (var file in Model.BiweeklyPaymentFiles)
                        {
                            <div class="col-md-6" style="text-align: center;">
                                <h4 style="margin-bottom:0">@file.PaymentFileType.GetDisplayName()</h4>
                                <strong>Subido el día: </strong><span>@file.CreatedOnUtc.ToLocalTime().ToString("dd/MM/yyyy")</span><br />
                                <div class="col-md-6" style="text-align: center;margin-top: 10px;">
                                    <button type="button" class="btn bg-red delete-file" data-id="@file.Id">
                                        Eliminar
                                    </button>
                                </div>
                                <div class="col-md-6" style="text-align: center; margin-top: 10px;">
                                    <button type="button" class="btn bg-blue download-file" data-id="@file.Id">
                                        Descargar
                                    </button>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                Agregar documento de nómina quincenal
            </div>
            <div class="panel-body">
                <script type="text/javascript">
                    $(document).ready(function () {
                        $('.download-file').click(function () {
                            $(this).attr('disabled', true);
                            var $button = $(this);
                            var id = $(this).data('id');
                                    $.ajax({
                                        cache: false,
                                        type: "GET",
                                        url: "@(Url.Action("BiweeklyPaymentFileDownload", "BiweeklyPayment"))?id=" + id,
                                        success: function (data) {
                                            console.log(data);
                                            $button.attr('disabled', false);
                                            // Create "a" element
                                            var a = window.document.createElement('a');
                                            // Convert to blob
                                            var blob = new Blob([s2ab(atob(data.FileArray))], {
                                                type: ''
                                            });
                                            a.href = window.URL.createObjectURL(blob);
                                            // Supply fileName
                                            a.download = data.Title + "." +
                                                data.Extension;
                                            // Add to count for better name
                                            document.body.appendChild(a);
                                            // Click "a" for download
                                            a.click();
                                            document.body.removeChild(a);
                                        },
                                        error: function (xhr, ajaxOptions, thrownError) {
                                            console.log(thrownError);
                                            $button.attr('disabled', false);
                                        }
                                    });
                        });
                        $('.delete-file').click(function () {
                            $(this).attr('disabled', true);
                            var $button = $(this);
                            var id = $(this).data('id');
                                    $.ajax({
                                        cache: false,
                                        type: "POST",
                                        url: "@(Url.Action("BiweeklyPaymentFileDelete", "BiweeklyPayment"))?id=" + id,
                                        success: function (data) {
                                            location.reload();
                                        },
                                        error: function (xhr, ajaxOptions, thrownError) {
                                            console.log(thrownError);
                                            $button.attr('disabled', false);
                                        }
                                    });
                        });
                                $('#addFile').click(function() {
                                    $('.file-error').hide();
                                    var type = $("#@Html.IdFor(model => model.Type)").val();
                                    var file = $("#FileInput")[0].files[0];

                                    $('#addFile').attr('disabled', true);

                            var postData = {
                                type: type,
                                file: file,
                                biweeklyPaymentId: @Model.Id,
                                payrollEmployeeId: @Model.PayrollEmployeeId,
                                payrollSalaryId: @Model.PayrollSalaryId,
                                originalPayment: @Model.OriginalPayment,
                                payday: "@Model.Date",
                                customerThatReportedId: @Model.CustomerThatReportedId,
                                        };
                        addAntiForgeryToken(postData);
                        var formData = new FormData();
                                    $.each(postData, function (name, value) {
                            formData.append(name, value);
                        });

                                    $.ajax({
                        contentType: false,
                                        processData: false,
                                        type: "POST",
                                        url: "@(Url.Action("BiweeklyPaymentFileAdd", "BiweeklyPayment"))",
                                        data: formData,
                                        success: function(data) {
                                var grid = $("#incidents-grid");
                                            $('#addFile').attr('disabled', false);
                                            location.reload();
                            },
                                        error: function(xhr, ajaxOptions, thrownError) {
                                alert('Failed to add file.');
                                            $('#addFile').attr('disabled', false);
                            }
                        });
                    });
                    });
                        function markPayment(paid) {
                            $('#markPayment').attr('disabled', true);
                            var postData = {
                                biweeklyPaymentId: @Model.Id,
                                payrollEmployeeId: @Model.PayrollEmployeeId,
                                payrollSalaryId: @Model.PayrollSalaryId,
                                originalPayment: @Model.OriginalPayment,
                                payday: "@Model.Date",
                                customerThatReportedId: @Model.CustomerThatReportedId,
                                paid: paid,
                                        };
                        addAntiForgeryToken(postData);
                        var formData = new FormData();
                                    $.each(postData, function (name, value) {
                            formData.append(name, value);
                        });

                                    $.ajax({
                        contentType: false,
                                        processData: false,
                                        type: "POST",
                                        url: "@(Url.Action("MarkPaid", "BiweeklyPayment"))",
                                        data: formData,
                                        success: function(data) {
                                            var grid = $("#incidents-grid");
                                            $('#markPayment').attr('disabled', false);
                                            location.reload();
                            },
                                        error: function(xhr, ajaxOptions, thrownError) {
                                            alert('Failed to add paid.');
                                            $('#markPayment').attr('disabled', false);
                            }
                        });
                        }
                    function s2ab(s) {
                        var buf = new ArrayBuffer(s.length);
                        var view = new Uint8Array(buf);
                        for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
                        return buf;
                    }
                </script>
                <div class="form-group">
                    <div class="col-md-3">
                        <nop-label asp-for="Type" />
                    </div>
                    <div class="col-md-9">
                        <nop-select asp-for="Type" asp-items="@Model.Types" />
                        <span asp-validation-for="Type"></span>
                    </div>
                </div>
                <div class="form-group file-input">
                    <div class="col-md-3">
                        <div class="label-wrapper">
                            <label class="control-label">Archivo</label>
                        </div>
                    </div>
                    <div class="col-md-9">
                        <input class="form-control text-box single-line" type="file" id="FileInput">
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-3 col-md-9 file-error" style="color: red;display: none;margin-bottom: 10px;">
                    Todos los campos son requeridos para agregar un nuevo archivo
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-9 col-md-offset-3" style="margin-bottom: 10px;">
                    <button type="button" id="addFile" class="btn btn-primary">Agregar archivo a la nómina</button>
                </div>
            </div>
        </div>
    </div>
</div>