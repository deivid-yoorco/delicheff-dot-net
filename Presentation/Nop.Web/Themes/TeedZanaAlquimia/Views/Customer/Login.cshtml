@model LoginModel
@using System.Net
@using Nop.Core
@inject IWebHelper webHelper
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Login").Text);
    //page class
    Html.AppendPageCssClassParts("html-login-page");

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register");
    if (!string.IsNullOrEmpty(this.Context.Request.Query["returnUrl"]))
    {
        registerUrl = webHelper.ModifyQueryString(registerUrl, "returnurl=" + WebUtility.UrlEncode(this.Context.Request.Query["returnUrl"]), null);
    }
}
<div class="page login-page">
    <h4 class="center-align">@T("Account.Login.Welcome")</h4>

    @await Html.PartialAsync("_ExternalAuthentication.Errors")
    <div class="page-body">
        
        <div class="center-align">
    @await Component.InvokeAsync("ExternalMethods", "ExternalAuthentication")
            @*<br />
            <br />*@
         </div>
        <div class="row">
            <div class="col s12 m6">
                <form asp-route="Login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post">
                    <div class="card ">
                        <div class="card-content">
                            <span class="card-title">@T("Account.Login.ReturningCustomer")</span>
                            <div class="red-text" asp-validation-summary="ModelOnly" >@T("Account.Login.Unsuccessful")</div>
                            <div class="row">
                                @if (Model.UsernamesEnabled)
                                {
                                    <div class="input-field col s12">
                                      <input asp-for="Username" class="validate" />
                                      <label asp-for="Username" >@Html.DisplayNameFor(model => model.Username)</label>
                                      <span asp-validation-for="Username" class="helper-text red-text"></span>
                                    </div>
                                }
                                else
                                {
                                    <div class="input-field col s12">
                                        <input asp-for="Email" class="validate" />
                                        <label asp-for="Email">@Html.DisplayNameFor(model => model.Email)</label>
                                        <span asp-validation-for="Email" class="helper-text red-text"></span>
                                    </div>
                                }
                                <div class="input-field col s12">
                                    <input asp-for="Password" class="validate" />
                                    <label asp-for="Password">@Html.DisplayNameFor(model => model.Password)</label>
                                    <span asp-validation-for="Password" class="helper-text red-text"></span>
                                </div>

                                <div class="input-field col s12">
                                    <label>
                                        <input asp-for="RememberMe" type="checkbox" class="filled-in" checked="checked" />
                                        <span>@Html.DisplayNameFor(model => model.RememberMe)</span>
                                    </label>
                                </div>
                                @if (Model.DisplayCaptcha)
                                {
                                    <div class="captcha-box">
                                        <nop-captcha />
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="card-action center-align">
                            <button type="submit" class="btn" >
                                @T("Account.Login.LoginButton")
                            </button>
                        </div>
                    </div>

                    <p>
                        <a asp-route="PasswordRecovery">@T("Account.Login.ForgotPassword")</a>
                    </p>
                </form>
            </div>
        
            
            @if (Model.CheckoutAsGuest)
            {
                <div class="col s12 m6">
                    <div class="card ">
                        <div class="card-content">
                            <span class="card-title">@T("Account.Login.CheckoutAsGuestOrRegister")</span>
                            <p>
                                @await Component.InvokeAsync("TopicBlock", new { systemName = "CheckoutAsGuestOrRegister" })
                            </p>
                        </div>
                        <div class="card-action center-align">
                            <button type="button" class="btn" onclick="location.href='@Url.RouteUrl("Checkout")'">
                                @T("Account.Login.CheckoutAsGuest")
                            </button>
                            <button type="button" class="btn" onclick="location.href='@registerUrl'">
                                @T("Account.Register")
                            </button>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="col s12 m6">
                    <div class="card ">
                        <div class="card-content">
                            <span class="card-title">@T("Account.Login.NewCustomer")</span>
                            <p>
                                @T("Account.Login.NewCustomerText")
                            </p>
                        </div>
                        <div class="card-action center-align">
                            <button type="button" class="btn" onclick="location.href='@registerUrl'">
                                @T("Account.Register")
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
        
    </div>
</div>