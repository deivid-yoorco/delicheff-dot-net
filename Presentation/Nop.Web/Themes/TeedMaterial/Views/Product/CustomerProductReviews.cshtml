@model CustomerProductReviewsModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.CustomerProductReviews").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-my-product-reviews-list-page");
}
@section left
    {
    @await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = CustomerNavigationEnum.ProductReviews })
}
<div class="page account-page my-product-reviews-list-page section">
    <div class="">
        <h1 class="category-page-title">@T("Account.MyAccount") - @T("Account.CustomerProductReviews")</h1>
    </div>
    <div class="page-body">
        @if (Model.ProductReviews.Count > 0)
        {
            foreach (var review in Model.ProductReviews)
            {
                var ratingPercent = review.Rating * 20;
                <div class="card-panel product-reviews-overview row">
                    <div class="review-item-head  col l12">
                        <div class="review-title col l6">
                            <strong>@review.Title</strong>@(!string.IsNullOrEmpty(review.ApprovalStatus) ? $" - {review.ApprovalStatus}" : null)
                        </div>
                        <div class="product-review-box col l3 offset-l3">
                            <div class="rating">
                                <div style="width: @(ratingPercent)%">
                                    <span class="product-description-rating">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= review.Rating)
                                            {
                                                <i class="material-icons">star</i>
                                            }
                                            else
                                            {
                                                <i class="material-icons">star_border</i>
                                            }
                                        }
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="review-content col l12">
                        <div class="review-text col l12">
                            @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(review.ReviewText, false, true, false, false, false, false))
                        </div>
                        <div class="review-info col l12">
                            <span class="user">
                                <label>@T("Account.CustomerProductReviews.ProductReviewFor"):</label>
                                <a href="@Url.RouteUrl("Product", new {SeName = review.ProductSeName})">@review.ProductName</a>

                            </span>
                            <span class="separator">|</span>
                            <span class="date">
                                <label>@T("Reviews.Date"):</label>
                                <span>@review.WrittenOnStr</span>
                            </span>
                        </div>
                        @if (!string.IsNullOrEmpty(review.ReplyText))
                        {
                            <div class="reply">
                                <div class="reply-header">
                                    @T("Reviews.Reply")
                                </div>
                                <div class="reply-text">
                                    @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(review.ReplyText, false, true, false, false, false, false))
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
            var pager = Html.Pager(Model.PagerModel);
            if (!string.IsNullOrEmpty(pager.ToHtmlString()))
            {
                <div class="pager">
                    @pager
                </div>
            }
        }
        else
        {
            <div class="no-data">
                @T("Account.CustomerProductReviews.NoRecords")
            </div>
        }
    </div>
</div>