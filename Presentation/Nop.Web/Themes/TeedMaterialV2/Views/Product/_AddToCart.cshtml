@model ProductDetailsModel.AddToCartModel
@using Nop.Core.Domain.Orders
@if (Model.UpdatedShoppingCartItemId > 0)
{
    <input asp-for="UpdatedShoppingCartItemId" type="hidden" />
}
@if (!Model.DisableBuyButton || Model.CustomerEntersPrice)
{
    <div class="add-to-cart">
        @if (Model.CustomerEntersPrice)
        {
            <div class="customer-entered-price">
                <div class="price-input">
                    <label asp-for="CustomerEnteredPrice" asp-postfix=":" class="enter-price-label"></label>
                    @*round price*@
                    <input asp-for="CustomerEnteredPrice" value="@Convert.ToInt32(Math.Ceiling(Model.CustomerEnteredPrice))" class="enter-price-input" />
                </div>
                <div class="price-range">
                    @Model.CustomerEnteredPriceRange
                </div>
            </div>
        }
        @if (!string.IsNullOrEmpty(Model.MinimumQuantityNotification))
        {
            <div class="min-qty-notification">@Model.MinimumQuantityNotification</div>
        }
        @if (!Model.DisableBuyButton)
        {
            <div class="row">
                <div class="input-field col s3" style="margin-bottom:0;">
                    @if (Model.AllowedQuantities.Count > 0)
                    {
                        <select asp-for="EnteredQuantity" asp-items="Model.AllowedQuantities" class="qty-dropdown"></select>
                    }
                    else
                    {
                        <input asp-for="EnteredQuantity" class="qty-input" type="text" />
                        <script type="text/javascript" asp-location="Footer">
                            //when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)
                            $(document).ready(function() {
                                $("#@Html.IdFor(model => model.EnteredQuantity)").keydown(function(event) {
                                    if (event.keyCode == 13) {
                                        $(".add-to-cart-button-@Model.ProductId").click();
                                        return false;
                                    }
                                });
                            });
                        </script>
                    }
                    <label asp-for="EnteredQuantity" class="qty-label"></label>
                </div>

                <div class="input-field col s9">
                    @{
                        var addToCartText = "";
                        if (Model.UpdatedShoppingCartItemId > 0 && Model.UpdateShoppingCartItemType.HasValue && Model.UpdateShoppingCartItemType.Value == ShoppingCartType.ShoppingCart)
                        {
                            addToCartText = T("ShoppingCart.AddToCart.Update").Text;
                        }
                        else
                        {
                            addToCartText = T("ShoppingCart.AddToCart").Text;
                            if (Model.IsRental)
                            {
                                addToCartText = T("ShoppingCart.Rent").Text;
                            }
                            if (Model.AvailableForPreOrder)
                            {
                                addToCartText = T("ShoppingCart.PreOrder").Text;
                            }
                        }
                        @if (Nop.Services.TeedCommerceStores.CurrentStore == Nop.Services.TeedStores.LogoShop)
                        {
                            <button type="button" class="add-to-cart-button-@Model.ProductId waves-effect waves-light btn">
                                @addToCartText
                            </button>
                            <script>
                            function addProductToCartDetails() {
                                AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new {productId = Model.ProductId, shoppingCartTypeId = (int) ShoppingCartType.ShoppingCart})', '#product-details-form');
                                return false;
                            }
                            </script>
                        }
                        else
                        {
                            <button type="button" class="waves-effect waves-light btn add-to-cart-button-@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new {productId = Model.ProductId, shoppingCartTypeId = (int) ShoppingCartType.ShoppingCart})', '#product-details-form');return false;">
                                @addToCartText
                            </button>
                        }
                    }
                </div>
            </div>
        }
        @await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_add_info", additionalData = Model.ProductId })
    </div>
}