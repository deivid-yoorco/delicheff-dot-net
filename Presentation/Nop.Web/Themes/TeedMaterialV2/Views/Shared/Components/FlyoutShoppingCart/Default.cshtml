@model MiniShoppingCartModel
@{
    bool IsMoto = false;
}
<div id="flyout-cart" class="flyout-cart hide-on-small-only">
    <div class="mini-shopping-cart">
        <div class="count">
            @if (Model.TotalProducts == 0)
            {
                @T("ShoppingCart.Mini.NoItems")
            }
            else
            {
                @Html.Raw(string.Format(T("ShoppingCart.Mini.ItemsText").Text, $"<a href=\"{Url.RouteUrl("ShoppingCart")}\">{string.Format(T("ShoppingCart.Mini.Items").Text, Model.TotalProducts)}</a>"))
            }
        </div>
        @if (Model.TotalProducts > 0)
        {
            <div class="items">
                @for (var i = 0; i < Model.Items.Count; i++)
                {
                    var item = Model.Items[i];
                    @if (Nop.Services.TeedCommerceStores.CurrentStore == Nop.Services.TeedStores.Kromtek)
                    {
                        if (!IsMoto)
                        {
                            if (item.Category.Equals("Motos"))
                            {
                                IsMoto = true;
                            }
                        }
                    }
                    <div class="item @(i == 0 ? "first" : null)">
                        @if (Model.ShowProductImages)
                        {
                            <div class="picture">
                                <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" title="@item.Picture.Title">
                                    <img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
                                </a>
                            </div>
                        }
                    <div class="product">
                        <div class="name">
                            <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="teed-primary-text">@item.ProductName</a>
                        </div>
                        @if (!string.IsNullOrEmpty(item.AttributeInfo))
                        {
                            <div class="attributes">
                                @Html.Raw(item.AttributeInfo)
                            </div>
                        }
                        @if (item.RequiredRewardsPoints > 0)
                        {
                            <div class="price"><span>@item.UnitPrice puntos</span></div>
                        }
                        else
                        {
                            <div class="price">
                                @if (item.EquivalenceCoefficient > 0 || item.WeightInterval > 0)
                                {
                                    <span>Precio pedido:</span>
                                }
                                else
                                {
                                    <span>@T("ShoppingCart.Mini.UnitPrice"):</span>
                                }
                                <span>@item.UnitPrice</span>
                            </div>
                        }
                        <div class="quantity">
                            @T("ShoppingCart.Mini.Quantity"):
                            @if (item.BuyingBySecondary && item.EquivalenceCoefficient > 0)
                            {
                                var type = "gr";
                                var value = (item.Quantity * 1000) / item.EquivalenceCoefficient;
                                if (value >= 1000)
                                {
                                    value = value / 1000;
                                    type = "kg";
                                }
                                <span>@(value.ToString("0.##")) @type</span>
                            }
                            else if (item.WeightInterval > 0)
                            {
                                var type = "gr";
                                var value = item.Quantity * item.WeightInterval;
                                if (value >= 1000)
                                {
                                    value = value / 1000;
                                    type = "kg";
                                }
                                <span>@(value.ToString("0.##")) @type</span>
                            }
                            else
                            {
                                <span>@item.Quantity</span>
                            }
                        </div>
                    </div>
                    </div>
                }
            </div>
            <div class="totals">
                @T("ShoppingCart.Totals.SubTotal"): <strong>@Model.SubTotal</strong>
                @if (Model.GamificationIsActive)
                {
                    <br />
                    <span>Puntos requeridos: </span><strong>@(Model.RequiredRewardsPointsTotal.ToString("N"))</strong>
                }
            </div>
            <div class="buttons">
                @if (Model.DisplayShoppingCartButton)
                {
                    <input type="button" value="@T("ShoppingCart.Mini.ViewCart")" class="waves-effect waves-light btn" onclick="setLocation('@(Url.RouteUrl("ShoppingCart"))')" />

                }
                @if (!Model.DisplayCheckoutButton)
                {
                    var checkoutUrl = "";
                    //if (Model.AnonymousCheckoutAllowed && Model.CurrentCustomerIsGuest)
                    //{
                    //    checkoutUrl = Url.RouteUrl("LoginCheckoutAsGuest", new { returnUrl = Url.RouteUrl("ShoppingCart") });
                    //}
                    //else
                    //{
                    checkoutUrl = Url.RouteUrl("Checkout");
                    //}

                    @if (IsMoto)
                    {
                        <a class="waves-effect waves-light btn modal-trigger" href="#modal-motos-minicart">Pagar</a>
                    }
                    else
                    {
                        @*<input type="button" value="Continuar" class="waves-effect waves-light btn" onclick="setLocation('@checkoutUrl')" />*@
                    }
                }
            </div>
        }
        @if (Nop.Services.TeedCommerceStores.CurrentStore == Nop.Services.TeedStores.Kromtek)
        {
            <!-- Modal Structure -->
            <div id="modal-motos-minicart" class="modal">
                <div class="modal-content">
                    <h4>Importante</h4>
                    <p style="font-size:16px">Para el envío de las motos debes comunicarte con nosotros a través de nuestra <a href="https://www.kromtekstore.com/contactus" target="_blank">sección de contacto</a> o llamando al teléfono:  <strong>01-800-570-6835</strong>  </p>
                </div>
                <div class="modal-footer" style="margin-left:-7px;">
                    <a href="#!" class="modal-close waves-effect waves-green btn">Cerrar</a>
                </div>
            </div>
        }
    </div>
</div>
