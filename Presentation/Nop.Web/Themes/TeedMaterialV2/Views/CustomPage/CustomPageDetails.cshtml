@model CustomPagesModel
@using Nop.Core.Domain.Seo
@using Nop.Web.Models.CustomPages
@using Nop.Services.Media
@using Nop.Services.Configuration
@using Nop.Core
@using Nop.Core.Caching
@inject SeoSettings seoSettings
@{
    var isPopup = ViewBag.IsPopup;
    if (isPopup == null || isPopup == false)
    {
        Layout = "_ColumnsOne";
    }

    //page class
    Html.AppendPageCssClassParts("html-topic-page");

    Html.AppendScriptParts(ResourceLocation.Footer, $"~/slick/slick.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, $"~/js/gridify.js");
    Html.AppendCssFileParts(ResourceLocation.Head, $"~/slick/slick.css");
    Html.AppendCssFileParts(ResourceLocation.Head, $"~/slick/slick-theme.css");
    Layout = "_NoContainer";

    //page class
    Html.AppendPageCssClassParts("html-home-page");

    string picture1Url = GetPictureUrl(Model.ParallaxPicture1Id);
    string picture2Url = GetPictureUrl(Model.ParallaxPicture2Id);
    string picture3Url = GetPictureUrl(Model.Top3Picture3Id);
    string picture4Url = GetPictureUrl(Model.Top3Picture4Id);
    string picture5Url = GetPictureUrl(Model.Top3Picture5Id);
    string picture6Url = GetPictureUrl(Model.CatPicture6Id);

    string textCarousel = Model.CarouselText;
    string textColorCarousel = Model.CarouselTextColor;

    string picture7Url = GetPictureUrl(Model.CarouselPicture7Id);
    string picture8Url = GetPictureUrl(Model.CarouselPicture8Id);
    string picture9Url = GetPictureUrl(Model.CarouselPicture9Id);
    string picture10Url = GetPictureUrl(Model.CarouselPicture10Id);
    string picture11Url = GetPictureUrl(Model.CarouselPicture11Id);
    string picture12Url = GetPictureUrl(Model.CarouselPicture12Id);
    string picture13Url = GetPictureUrl(Model.CarouselPicture13Id);
    string picture14Url = GetPictureUrl(Model.CarouselPicture14Id);
    string picture15Url = GetPictureUrl(Model.BoxPicture15Id);
    string picture16Url = GetPictureUrl(Model.BoxPicture16Id);
    string picture17Url = GetPictureUrl(Model.BoxPicture17Id);
    string picture18Url = GetPictureUrl(Model.BoxPicture18Id);
    string picture19Url = GetPictureUrl(Model.CollagePicture19Id);
    string picture20Url = GetPictureUrl(Model.CollagePicture20Id);
    string picture21Url = GetPictureUrl(Model.CollagePicture21Id);
    string picture22Url = GetPictureUrl(Model.CollagePicture22Id);
    string picture23Url = GetPictureUrl(Model.CollagePicture23Id);
    string picture24Url = GetPictureUrl(Model.CollagePicture24Id);
    string picture25Url = GetPictureUrl(Model.CollagePicture25Id);
    string picture26Url = GetPictureUrl(Model.CollagePicture26Id);
    string picture27Url = GetPictureUrl(Model.CollagePicture27Id);
    string picture28Url = GetPictureUrl(Model.CollagePicture28Id);
    string picture29Url = GetPictureUrl(Model.CollagePicture29Id);
    string picture30Url = GetPictureUrl(Model.CollagePicture30Id);
    string picture31Url = GetPictureUrl(Model.CollagePicture31Id);
    string picture32Url = GetPictureUrl(Model.CollagePicture32Id);
    string picture33Url = GetPictureUrl(Model.CollagePicture33Id);
    string picture34Url = GetPictureUrl(Model.CollagePicture34Id);
    string picture35Url = GetPictureUrl(Model.CollagePicture35Id);
    string picture36Url = GetPictureUrl(Model.CollagePicture36Id);
    string picture37Url = GetPictureUrl(Model.CollagePicture37Id);
    string picture38Url = GetPictureUrl(Model.CollagePicture38Id);

    string bannerPicUrl1 = GetPictureUrl(Model.SliderBannerPicture1Id);
    string bannerPicUrl2 = GetPictureUrl(Model.SliderBannerPicture2Id);
    string bannerPicUrl3 = GetPictureUrl(Model.SliderBannerPicture3Id);
    string bannerPicUrl4 = GetPictureUrl(Model.SliderBannerPicture4Id);
    string bannerPicUrl5 = GetPictureUrl(Model.BannerPicture5Id);
    string bannerPicUrl6 = GetPictureUrl(Model.BannerPicture6Id);

    string text6 = Model.CatText6;
    string textColor6 = !string.IsNullOrEmpty(Model.CatTextColor6) ? Model.CatTextColor6 : "#ffffff";

    string option1 = Model.CatTextDropdown1;
    string linkOption1 = Model.CatLinkDropdown1;
    string option2 = Model.CatTextDropdown2;
    string linkOption2 = Model.CatLinkDropdown2;
    string option3 = Model.CatTextDropdown3;
    string linkOption3 = Model.CatLinkDropdown3;
    string option4 = Model.CatTextDropdown4;
    string linkOption4 = Model.CatLinkDropdown4;
    string option5 = Model.CatTextDropdown5;
    string linkOption5 = Model.CatLinkDropdown5;
    string option6 = Model.CatTextDropdown6;
    string linkOption6 = Model.CatLinkDropdown6;
    string option7 = Model.CatTextDropdown7;
    string linkOption7 = Model.CatLinkDropdown7;
    string option8 = Model.CatTextDropdown8;
    string linkOption8 = Model.CatLinkDropdown8;
    string option9 = Model.CatTextDropdown9;
    string linkOption9 = Model.CatLinkDropdown9;
    string option10 = Model.CatTextDropdown10;
    string linkOption10 = Model.CatLinkDropdown10;

    string bannerTitle5 = Model.BannerTitle5;
    string bannerSubTitle5 = Model.BannerSubTitle5;
    string bannerTitleColor5 = Model.BannerTitleColor5;
    string bannerSubTitleColor5 = Model.BannerSubTitleColor5;

    string bannerTitle6 = Model.BannerTitle6;
    string bannerSubTitle6 = Model.BannerSubTitle6;
    string bannerTitleColor6 = Model.BannerTitleColor6;
    string bannerSubTitleColor6 = Model.BannerSubTitleColor6;

    int tagsQty = Model.TagsQty;

    string picture39Url = GetPictureUrl(Model.PopUpPicture39Id);
    string picture39RUrl = GetPictureUrl(Model.PopUpPicture39ResponsiveId);

    string sliderArrow = GetPictureUrl(Model.SliderArrowId);
    string carouselArrow = GetPictureUrl(Model.CarouselArrowId);
}
@if (Model.HideNavBar)
{
    <script asp-location="Footer">
        $("#custom-navbar").hide();
    </script>
}
@if (!string.IsNullOrWhiteSpace(Model.PrimaryColor))
{
    <style asp-location="Footer">
        .btn,
        .teed-primary {
            background-color: #@(Model.PrimaryColor) !important;
        }

        .teed-primary-text,
        .card .card-action a:not(.btn):not(.btn-large):not(.btn-small):not(.btn-large):not(.btn-floating) {
            color: #@(Model.PrimaryColor) !important
        }

        .notify-bubble {
            box-shadow: 1px 1px 1px #@(Model.PrimaryColor) !important;
        }
    </style>
    <script asp-location="Footer">
        var pad = function (num, totalChars) {
            var pad = '0';
            num = num + '';
            while (num.length < totalChars) {
                num = pad + num;
            }
            return num;
        };

        // Ratio is between 0 and 1
        var changeColor = function (color, ratio, darker) {
            // Trim trailing/leading whitespace
            color = color.replace(/^\s*|\s*$/, '');

            // Expand three-digit hex
            color = color.replace(
                /^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i,
                '#$1$1$2$2$3$3'
            );

            // Calculate ratio
            var difference = Math.round(ratio * 256) * (darker ? -1 : 1),
                // Determine if input is RGB(A)
                rgb = color.match(new RegExp('^rgba?\\(\\s*' +
                    '(\\d|[1-9]\\d|1\\d{2}|2[0-4][0-9]|25[0-5])' +
                    '\\s*,\\s*' +
                    '(\\d|[1-9]\\d|1\\d{2}|2[0-4][0-9]|25[0-5])' +
                    '\\s*,\\s*' +
                    '(\\d|[1-9]\\d|1\\d{2}|2[0-4][0-9]|25[0-5])' +
                    '(?:\\s*,\\s*' +
                    '(0|1|0?\\.\\d+))?' +
                    '\\s*\\)$'
                    , 'i')),
                alpha = !!rgb && rgb[4] != null ? rgb[4] : null,

                // Convert hex to decimal
                decimal = !!rgb ? [rgb[1], rgb[2], rgb[3]] : color.replace(
                    /^#?([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])([a-f0-9][a-f0-9])/i,
                    function () {
                        return parseInt(arguments[1], 16) + ',' +
                            parseInt(arguments[2], 16) + ',' +
                            parseInt(arguments[3], 16);
                    }
                ).split(/,/),
                returnValue;

            // Return RGB(A)
            return !!rgb ?
                'rgb' + (alpha !== null ? 'a' : '') + '(' +
                Math[darker ? 'max' : 'min'](
                    parseInt(decimal[0], 10) + difference, darker ? 0 : 255
                ) + ', ' +
                Math[darker ? 'max' : 'min'](
                    parseInt(decimal[1], 10) + difference, darker ? 0 : 255
                ) + ', ' +
                Math[darker ? 'max' : 'min'](
                    parseInt(decimal[2], 10) + difference, darker ? 0 : 255
                ) +
                (alpha !== null ? ', ' + alpha : '') +
                ')' :
                // Return hex
                [
                    '#',
                    pad(Math[darker ? 'max' : 'min'](
                        parseInt(decimal[0], 10) + difference, darker ? 0 : 255
                    ).toString(16), 2),
                    pad(Math[darker ? 'max' : 'min'](
                        parseInt(decimal[1], 10) + difference, darker ? 0 : 255
                    ).toString(16), 2),
                    pad(Math[darker ? 'max' : 'min'](
                        parseInt(decimal[2], 10) + difference, darker ? 0 : 255
                    ).toString(16), 2)
                ].join('');
        };

        var lighterColor = function (color, ratio) {
            return changeColor(color, ratio, false);
        };
        var darkerColor = function (color, ratio) {
            return changeColor(color, ratio, true);
        };

        // Use
        var darker = darkerColor('#' + '@Model.PrimaryColor', .1);
        var lighter = lighterColor('#' + '@Model.PrimaryColor', .1);

        $(".footer-copyright").attr("style", "background-color: " + darker + " !important");
        $(".page-footer").attr("style", "background-color: " + lighter + " !important");
        $("nav").attr("style", "background-color: " + darker + " !important");
    </script>
}

@if (Model.PopUpEnable)
{
    <div id="modal-home" class="modal" style="overflow: hidden;">
        <img src="@GetPictureUrl(Model.PopUpPicture39Id)" class="hide-on-small-only" style="z-index:-1;position:fixed;width:100%;" />
        <img src="@GetPictureUrl(Model.PopUpPicture39ResponsiveId)" class="hide-on-med-and-up" style="z-index:-1;position:fixed;width:100%;" />
        <div class="modal-content">
            <div class="row">
                <div class="col s12 m12" style="margin-top:2%;">
                    <div class="col s12 m6"></div>
                    <div class="col s12 m6">
                        <div class="row">
                            <div class="input-field col s12 m6">
                                <input placeholder="" id="first_name" type="text" class="validate" style="color:white;">
                                <label for="first_name">Nombre</label>
                            </div>
                            <div class="input-field col s12 m6">
                                <input placeholder="" id="last_name" type="text" class="validate" style="color:white;">
                                <label for="last_name">Apellido</label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="input-field col s12 m12">
                                <input placeholder="" id="email" type="email" class="validate" style="color:white;">
                                <label for="email">Correo</label>
                            </div>
                        </div>
                    </div>
                    <div class="col s12 m6"></div>
                    <div class="col s12 m6 center">
                        <a href="#!" class="modal-close waves-effect waves-red btn-flat" style="color:white;">No gracias</a>
                        <a href="#!" class="modal-close waves-effect waves-green btn" onclick="registerAjax();">Enviar</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <button data-target="modal-home" class="btn modal-trigger" id="btn-modal" style="display:none;"></button>
    <script asp-location="Footer">
        $(document).ready(function () {
            if (document.cookie.indexOf("runOnce") < 0) {
                $('#modal-home').modal();
                $('#btn-modal').trigger('click');
                var d = new Date();
                d.setTime(d.getTime() + (24 * 60 * 60 * 1000));
                var expires = "expires=" + d.toGMTString();
                document.cookie = "runOnce=true;" + expires + "; path=/";
            }
        });

        function registerAjax() {
            var name = $('#first_name').val();
            var lastName = $('#last_name').val();
            var email = $('#email').val();

            var data = {
                name: name,
                lastName: lastName,
                mail: email
            };

            $.ajax({
                cache: false,
                url: 'Customer/RegisterAjax',
                data: data,
                type: 'POST',
                success: function () {
                },
                error: function () {
                    alert('Error de conexión');
                }
            });
        }
    </script>
}

<div class="one-time hide-on-small-only show-on-medium-and-up" style="display:none !important;" id="teed-slider">
    @if (!string.IsNullOrEmpty(Model.SliderVideoId))
    {
        <div>
            <div class="video-container">
                <div id="player"></div>
            </div>
            <script>
            // 2. This code loads the IFrame Player API code asynchronously.
            var tag = document.createElement('script');

            tag.src = "https://www.youtube.com/iframe_api";
            var firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

            // 3. This function creates an <iframe> (and YouTube player)
            //    after the API code downloads.
            var player;
            function onYouTubeIframeAPIReady() {
                player = new YT.Player('player', {
                    videoId: '@Model.SliderVideoId',
                    playerVars: { 'autoplay': 1, 'controls': 0, 'rel': 0, 'showinfo': 0, 'disablekb': 1, 'enablejsapi': 1, 'modestbranding': 1, 'loop': 1 },
                    events: {
                        'onReady': onPlayerReady,
                        'onStateChange': onPlayerStateChange
                    }
                });
            }

            // 4. The API will call this function when the video player is ready.
            function onPlayerReady(event) {
                event.target.playVideo();
            }

            // 5. The API calls this function when the player's state changes.
            //    The function indicates that when playing a video (state=1),
            //    the player should play for six seconds and then stop.
            function onPlayerStateChange(event) {
                if (event.data == YT.PlayerState.ENDED) {
                    player.playVideo();
                }
            }
            </script>
        </div>
    }
    @if (!string.IsNullOrEmpty(bannerPicUrl1))
    {
        string link1 = string.IsNullOrEmpty(Model.SliderBannerLink1) ? "#" : Model.SliderBannerLink1;
        <a href="@link1"><img style="width:100%" class="responsive-img" src="@bannerPicUrl1"></a>
    }
    @if (!string.IsNullOrEmpty(bannerPicUrl2))
    {
        string link2 = string.IsNullOrEmpty(Model.SliderBannerLink2) ? "#" : Model.SliderBannerLink2;
        <a href="@link2"><img style="width:100%" class="responsive-img" src="@bannerPicUrl2"></a>
    }
    @if (!string.IsNullOrEmpty(bannerPicUrl3))
    {
        string link3 = string.IsNullOrEmpty(Model.SliderBannerLink3) ? "#" : Model.SliderBannerLink3;
        <a href="@link3"><img style="width:100%" class="responsive-img" src="@bannerPicUrl3"></a>
    }
    @if (!string.IsNullOrEmpty(bannerPicUrl4))
    {
        string link4 = string.IsNullOrEmpty(Model.SliderBannerLink4) ? "#" : Model.SliderBannerLink4;
        <a href="@link4"><img style="width:100%" class="responsive-img" src="@bannerPicUrl4"></a>
    }
</div>
<div class="one-time show-on-small hide-on-med-and-up" style="display:none !important;" id="teed-slider">
    @if (!string.IsNullOrEmpty(bannerPicUrl1))
    {
        string link1 = string.IsNullOrEmpty(Model.SliderBannerLink1) ? "#" : Model.SliderBannerLink1;
        <a href="@link1"><img style="width:100%" class="responsive-img" src="@bannerPicUrl1"></a>
    }
    @if (!string.IsNullOrEmpty(bannerPicUrl2))
    {
        string link2 = string.IsNullOrEmpty(Model.SliderBannerLink2) ? "#" : Model.SliderBannerLink2;
        <a href="@link2"><img style="width:100%" class="responsive-img" src="@bannerPicUrl2"></a>
    }
    @if (!string.IsNullOrEmpty(bannerPicUrl3))
    {
        string link3 = string.IsNullOrEmpty(Model.SliderBannerLink3) ? "#" : Model.SliderBannerLink3;
        <a href="@link3"><img style="width:100%" class="responsive-img" src="@bannerPicUrl3"></a>
    }
    @if (!string.IsNullOrEmpty(bannerPicUrl4))
    {
        string link4 = string.IsNullOrEmpty(Model.SliderBannerLink4) ? "#" : Model.SliderBannerLink4;
        <a href="@link4"><img style="width:100%" class="responsive-img" src="@bannerPicUrl4"></a>
    }
</div>

@if (!string.IsNullOrEmpty(Model.SliderVideoId))
{
    <script>
        $(document).ready(function () {
            $('.one-time').slick({
                dots: true,
                infinite: false,
                slidesToShow: 1,
                slidesToScroll: 1,
                adaptiveHeight: true,
                arrows: false
            }).on('afterChange', function (event, slick, currentSlide, nextSlide) {
                if (currentSlide != 0) {
                    $('#player').each(function () {
                        $(this)[0].contentWindow.postMessage('{"event":"command","func":"pauseVideo","args":""}', '*');
                    });
                } else {
                    $('#player').each(function () {
                        $(this)[0].contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
                    });
                }
            });
        });
    </script>
}
else
{
    <script>
        $(document).ready(function () {
            $('.one-time').slick({
                dots: false,
                infinite: true,
                autoplaySpeed: 6000,
                slidesToShow: 1,
                slidesToScroll: 1,
                fade: true,
                adaptiveHeight: true,
                arrows: true,
                autoplay: false
            });
        });
    </script>
}
@if (!string.IsNullOrWhiteSpace(sliderArrow))
{
    <style>
        @@media only screen and (max-width: 992px) {
            #teed-slider > .slick-prev:before,
            #teed-slider > .slick-next:before {
                content: "";
                background: url('@sliderArrow') no-repeat;
                display: block;
                width: 40px;
                height: 40px;
                background-size: contain;
            }
        }

        @@media only screen and (min-width: 992px) {
            #teed-slider > .slick-prev:before,
            #teed-slider > .slick-next:before {
                content: "";
                background: url('@sliderArrow') no-repeat;
                display: block;
                width: 100px;
                height: 100px;
                background-size: contain;
            }
        }

        #teed-slider > .slick-prev {
            transform: rotate(180deg) translate(0, 50%);
        }
    </style>
}

@if (!string.IsNullOrEmpty(text6))
{
    <div class="parallax-container-categories center valign-wrapper">
        <div class="parallax-categories"><img style="transform:translateY(-50%)" class="responsive-img" src="@picture6Url" style="width:100%;"></div>
        <div class="container" id="container6">
            <div class="row" style="margin-bottom:0;">
                <div class="col s12 m6 textColor6">
                    <h5 id="fontTextColor6" style="margin-top:3.5%;">@text6</h5>
                </div>
                <div class="col s12 m5" style="margin-top:1%;">
                    <select id="select-categories" style="padding-left:1%;" onchange="redirectCategory()">
                        <option value="0" selected>Elige una categoría...</option>
                        @if (!string.IsNullOrEmpty(option1))
                        {
                            <option value="@linkOption1">@option1</option>
                        }
                        @if (!string.IsNullOrEmpty(option2))
                        {
                            <option value="@linkOption2">@option2</option>
                        }
                        @if (!string.IsNullOrEmpty(option3))
                        {
                            <option value="@linkOption3">@option3</option>
                        }
                        @if (!string.IsNullOrEmpty(option4))
                        {
                            <option value="@linkOption4">@option4</option>
                        }
                        @if (!string.IsNullOrEmpty(option5))
                        {
                            <option value="@linkOption5">@option5</option>
                        }
                        @if (!string.IsNullOrEmpty(option6))
                        {
                            <option value="@linkOption6">@option6</option>
                        }
                        @if (!string.IsNullOrEmpty(option7))
                        {
                            <option value="@linkOption7">@option7</option>
                        }
                        @if (!string.IsNullOrEmpty(option8))
                        {
                            <option value="@linkOption8">@option8</option>
                        }
                        @if (!string.IsNullOrEmpty(option9))
                        {
                            <option value="@linkOption9">@option9</option>
                        }
                        @if (!string.IsNullOrEmpty(option10))
                        {
                            <option value="@linkOption10">@option10</option>
                        }
                    </select>
                </div>
                <div class="col s1 m1 hide-on-small-only"></div>
            </div>
        </div>
    </div>
    <style>
        .textColor6 {
            color: @textColor6 !important;
        }

        .select-wrapper input.select-dropdown {
            background-color: white !important;
            padding-left: 2%;
        }

        .select-wrapper .caret {
            z-index: 1;
        }

        .dropdown-content {
            top: 0px !important;
            height: 220px !important;
        }

        .parallax-container-categories {
            min-height: 100px !important;
        }

        .parallax-categories {
            position: absolute;
            left: 0;
            right: 0;
            z-index: -1;
            overflow: hidden;
            height: 100px;
        }

        @@media only screen and (max-width: 601px) {
            .dropdown-content {
                height: 190px !important;
            }

            #container6{
                margin-top: -1%;
            }

            #fontTextColor6 {
                font-size: 1.5em;
            }
        }

         @@media only screen and (max-width: 321px) {
            #fontTextColor6 {
                font-size: 1.3em;
            }

            .parallax-container-categories {
                margin-bottom: -1%;
            }
        }
    </style>
    <script type="text/javascript" asp-location="Footer">
        function redirectCategory() {
            var page = $('#select-categories').val();
            if (page != 0) {
                window.location.href = window.location.href + page;
            }
        }
    </script>
}

@if (!string.IsNullOrEmpty(bannerPicUrl5))
{
    string link5 = string.IsNullOrEmpty(Model.BannerLink5) ? "#" : Model.BannerLink5;
    <a href="@link5">
        <div id="parallax-container5" class="parallax-container center valign-wrapper">
            <div class="parallax"><img class="responsive-img" src="@bannerPicUrl5"></div>
            <div class="container">
                <div class="row">
                    <div class="col s10 m6">
                        <h2 id="bannerTitleColor5">@bannerTitle5</h2>
                        <h3 id="bannerSubTitleColor5" style="margin-top:5%;">@bannerSubTitle5</h3>
                    </div>
                    <div class="col s2 m6"></div>
                </div>
            </div>
        </div>
    </a>
    <style>
        #bannerTitleColor5 {
            color: @bannerTitleColor5 !important;
        }

        #bannerSubTitleColor5 {
            color: @bannerSubTitleColor5 !important;
        }

        .parallax-container .parallax img {
            min-height: 0;
        }

        @@media only screen and (max-width: 1024px)
        {
            #parallax-container5 {
                min-height: 0;
            }
        }

        @@media only screen and (max-width: 768px)
        {
            #parallax-container5 {
                min-height: 0;
            }
        }

        @@media only screen and (max-width: 601px) {
            #parallax-container5 {
                min-height: 0px !important;
                margin-top: -0.5%;
            }

            .parallax-container5 {
                min-height: 0;
                height: 200px;
            }

            #bannerTitleColor5 {
                font-size: 1.5em;
            }

            #bannerSubTitleColor5 {
                font-size: 1em;
            }

            .row {
                margin-bottom: 18px;
            }
        }
    </style>
}

@if (!string.IsNullOrEmpty(bannerPicUrl6))
{
    string link6 = string.IsNullOrEmpty(Model.BannerLink6) ? "#" : Model.BannerLink6;
    <a href="@link6">
        <div id="parallax-container6" class="parallax-container center valign-wrapper">
            <div class="parallax"><img src="@bannerPicUrl6"></div>
            <div class="container">
                <div class="row">
                    <div class="col s10 m6">
                        <h2 id="bannerTitleColor6">@bannerTitle6</h2>
                        <h3 id="bannerSubTitleColor6" style="margin-top:5%;">@bannerSubTitle6</h3>
                    </div>
                    <div class="col s2 m6"></div>
                </div>
            </div>
        </div>
    </a>
    <style>
        #bannerTitleColor6 {
            color: @bannerTitleColor6 !important;
        }

        #bannerSubTitleColor6 {
            color: @bannerSubTitleColor6 !important;
        }

        @@media only screen and (max-width: 1024px)
        {
            #parallax-container6 {
                min-height: 0;
            }
        }

        @@media only screen and (max-width: 768px)
        {
            #parallax-container6 {
                min-height: 0;
            }
        }

        @@media only screen and (max-width: 601px) {
            #parallax-container6 {
                min-height: 0px !important;
            }

            .parallax-container6 {
                min-height: 0;
                height: 200px;
            }

            #bannerTitleColor6 {
                font-size: 1.5em;
            }

            #bannerSubTitleColor6 {
                font-size: 1em;
            }
        }

         @@media only screen and (max-width: 768px) {
            .parallax-container {
                min-height: 0;
            }
        }
    </style>
}

@if (Model.CollageEnable)
{
    <script type="text/javascript">
        window.onload = function () {
            var options =
            {
                srcNode: 'img',             // grid items (class, node)
                margin: '5px',              // margin in pixel, default: 0px
                width: '250px',             // grid item width in pixel, default: 220px
                max_width: '',              // dynamic gird item width if specified, (pixel)
                resizable: true,            // re-layout if window resize
                transition: 'all 0.5s ease' // support transition for CSS3, default: all 0.5s ease
            }
            document.querySelector('.grid').gridify(options);
        }
    </script>
    <div class="grid" style="margin-top:3%">
        @{
            string link19 = string.IsNullOrEmpty(Model.CollageLink19) ? "#" : Model.CollageLink19;
            <a href="@link19"><img src="@picture19Url" /></a>
            string link20 = string.IsNullOrEmpty(Model.CollageLink20) ? "#" : Model.CollageLink20;
            <a href="@link20"><img src="@picture20Url" /></a>
            string link21 = string.IsNullOrEmpty(Model.CollageLink21) ? "#" : Model.CollageLink21;
            <a href="@link21"><img src="@picture21Url" /></a>
            string link22 = string.IsNullOrEmpty(Model.CollageLink22) ? "#" : Model.CollageLink22;
            <a href="@link22"><img src="@picture22Url" /></a>
            string link23 = string.IsNullOrEmpty(Model.CollageLink23) ? "#" : Model.CollageLink23;
            <a href="@link23"><img src="@picture23Url" /></a>
            string link24 = string.IsNullOrEmpty(Model.CollageLink24) ? "#" : Model.CollageLink24;
            <a href="@link24"><img src="@picture24Url" /></a>
            string link25 = string.IsNullOrEmpty(Model.CollageLink25) ? "#" : Model.CollageLink25;
            <a href="@link25"><img src="@picture25Url" /></a>
            string link26 = string.IsNullOrEmpty(Model.CollageLink26) ? "#" : Model.CollageLink26;
            <a href="@link26"><img src="@picture26Url" /></a>
            string link27 = string.IsNullOrEmpty(Model.CollageLink27) ? "#" : Model.CollageLink27;
            <a href="@link27"><img src="@picture27Url" /></a>
            string link28 = string.IsNullOrEmpty(Model.CollageLink28) ? "#" : Model.CollageLink28;
            <a href="@link28"><img src="@picture28Url" /></a>
            string link29 = string.IsNullOrEmpty(Model.CollageLink29) ? "#" : Model.CollageLink29;
            <a href="@link29"><img src="@picture29Url" /></a>
            string link30 = string.IsNullOrEmpty(Model.CollageLink30) ? "#" : Model.CollageLink30;
            <a href="@link30"><img src="@picture30Url" /></a>
            string link31 = string.IsNullOrEmpty(Model.CollageLink31) ? "#" : Model.CollageLink31;
            <a href="@link31"><img src="@picture31Url" /></a>
            string link32 = string.IsNullOrEmpty(Model.CollageLink32) ? "#" : Model.CollageLink32;
            <a href="@link32"><img src="@picture32Url" /></a>
            string link33 = string.IsNullOrEmpty(Model.CollageLink33) ? "#" : Model.CollageLink33;
            <a href="@link33"><img src="@picture33Url" /></a>
            string link34 = string.IsNullOrEmpty(Model.CollageLink34) ? "#" : Model.CollageLink34;
            <a href="@link34"><img src="@picture34Url" /></a>
            string link35 = string.IsNullOrEmpty(Model.CollageLink35) ? "#" : Model.CollageLink35;
            <a href="@link35"><img src="@picture35Url" /></a>
            string link36 = string.IsNullOrEmpty(Model.CollageLink36) ? "#" : Model.CollageLink36;
            <a href="@link36"><img src="@picture36Url" /></a>
            string link37 = string.IsNullOrEmpty(Model.CollageLink37) ? "#" : Model.CollageLink37;
            <a href="@link37"><img src="@picture37Url" /></a>
            string link38 = string.IsNullOrEmpty(Model.CollageLink38) ? "#" : Model.CollageLink38;
            <a href="@link38"><img src="@picture38Url" /></a>
        }
    </div>
}

<div class="container">
    @await Component.InvokeAsync("TopicBlock", new { systemName = "HomePageText" })

    @if (!string.IsNullOrEmpty(picture3Url) || !string.IsNullOrEmpty(picture4Url) || !string.IsNullOrEmpty(picture5Url))
    {
        string newStyle = "";

        if (Nop.Services.TeedCommerceStores.CurrentStore == Nop.Services.TeedStores.Kromtek)
        {
            newStyle = "class=\"row font-size-16\"";
        }
        else
        {
            newStyle = "class=\"row\"";
        }

        <div @Html.Raw(newStyle)>
            @if (!string.IsNullOrEmpty(picture3Url))
            {
                <div class="col s12 m4 custom-home-component">
                    <div class="card">
                        <div class="card-image">
                            @if (!string.IsNullOrEmpty(Model.Top3Link3))
                            {
                                <a href="@Model.Top3Link3">
                                    <img src="@picture3Url" alt="" title="@Model.Top3Text3" />
                                </a>
                            }
                            else
                            {
                                <img src="@picture3Url" alt="" title="@Model.Top3Text3" />
                            }
                        </div>
                        @if (!string.IsNullOrEmpty(@Model.Top3Text3))
                        {
                            if (Nop.Services.TeedCommerceStores.CurrentStore == Nop.Services.TeedStores.Kromtek)
                            {
                                newStyle = "class=\"card-action center\"";
                            }
                            else
                            {
                                newStyle = "class=\"card-action\"";
                            }
                            <div @Html.Raw(newStyle)>
                                @if (Nop.Services.TeedCommerceStores.CurrentStore == Nop.Services.TeedStores.Kromtek)
                                {
                                    newStyle = "class=\"teed-secondary-text\"";
                                }
                                else
                                {
                                    newStyle = "";
                                }
                                <a href="@Model.Top3Link3" @Html.Raw(newStyle)>
                                    @Html.Raw(Model.Top3Text3)
                                </a>
                            </div>
                        }
                    </div>
                </div>
            }

            @if (!string.IsNullOrEmpty(picture4Url))
            {
                <div class="col s12 m4 custom-home-component">
                    <div class="card">
                        <div class="card-image">
                            @if (!string.IsNullOrEmpty(Model.Top3Link4))
                            {
                                <a href="@Model.Top3Link4">
                                    <img src="@picture4Url" alt="" title="@Model.Top3Text4" />
                                </a>
                            }
                            else
                            {
                                <img src="@picture4Url" alt="" title="@Model.Top3Text4" />
                            }
                        </div>
                        @if (!string.IsNullOrEmpty(Model.Top3Text4))
                        {
                            if (Nop.Services.TeedCommerceStores.CurrentStore == Nop.Services.TeedStores.Kromtek)
                            {
                                newStyle = "class=\"card-action center\"";
                            }
                            else
                            {
                                newStyle = "class=\"card-action\"";
                            }
                            <div @Html.Raw(newStyle)>
                                @if (Nop.Services.TeedCommerceStores.CurrentStore == Nop.Services.TeedStores.Kromtek)
                                {
                                    newStyle = "class=\"teed-secondary-text\"";
                                }
                                else
                                {
                                    newStyle = "";
                                }
                                <a href="@Model.Top3Link4" @Html.Raw(newStyle)>
                                    @Html.Raw(Model.Top3Text4)
                                </a>
                            </div>
                        }
                    </div>
                </div>
            }

            @if (!string.IsNullOrEmpty(picture5Url))
            {
                <div class="col s12 m4 custom-home-component">
                    <div class="card">
                        <div class="card-image">
                            @if (!string.IsNullOrEmpty(Model.Top3Link5))
                            {
                                <a href="@Model.Top3Link5">
                                    <img src="@picture5Url" alt="" title="@Model.Top3Text5" />
                                </a>
                            }
                            else
                            {
                                <img src="@picture5Url" alt="" title="@Model.Top3Text5" />
                            }
                        </div>
                        @if (!string.IsNullOrEmpty(Model.Top3Text5))
                        {
                            if (Nop.Services.TeedCommerceStores.CurrentStore == Nop.Services.TeedStores.Kromtek)
                            {
                                newStyle = "class=\"card-action center\"";
                            }
                            else
                            {
                                newStyle = "class=\"card-action\"";
                            }
                            <div @Html.Raw(newStyle)>
                                @if (Nop.Services.TeedCommerceStores.CurrentStore == Nop.Services.TeedStores.Kromtek)
                                {
                                    newStyle = "class=\"teed-secondary-text\"";
                                }
                                else
                                {
                                    newStyle = "";
                                }
                                <a href="@Model.Top3Link5" @Html.Raw(newStyle)>
                                    @Html.Raw(Model.Top3Text5)
                                </a>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    }
</div>

@if (!string.IsNullOrEmpty(picture1Url))
{
    @if (string.IsNullOrEmpty(Model.ParallaxLink1))
    {
        <div class="parallax-container homepage-parallax">
            <div class="parallax">
                <img src="@picture1Url" title="@Model.ParallaxText1" />
            </div>
        </div>
    }
    else
    {
        <div class="parallax-container pointer homepage-parallax" onclick="setLocation('@Model.ParallaxLink1')">
            <div class="parallax">
                <img src="@picture1Url" title="@Model.ParallaxText1" />
            </div>
        </div>
    }
}

<div class="container">
    @if (Model.SelectedProductIds.Count > 0)
    {
        <div class="section">
            <h4>@Model.ProductSectionTitle</h4>

            <div class="row">
                @foreach (var item in Model.Products)
                {
                    <div class="col s6 m6 l3" style="margin-bottom:2%;">
                        @await Html.PartialAsync("_ProductBox", item)
                    </div>
                }
            </div>
        </div>
    }
</div>

@if (!string.IsNullOrEmpty(picture7Url))
{
    <div class="container">
        <div class="row">
            @if (!string.IsNullOrEmpty(textCarousel))
            {
                <h4 id="color-carousel">@textCarousel</h4>
            }
            <div class="responsive col s12 m12 sc" id="teed-carousel">
                @if (!string.IsNullOrEmpty(picture7Url))
                {
                    string link7 = string.IsNullOrEmpty(Model.CarouselLink7) ? "#" : Model.CarouselLink7;
                    <div class="col s3 m3"><a href="@link7"><img class="responsive-img" src="@picture7Url" /></a></div>
                }
                @if (!string.IsNullOrEmpty(picture8Url))
                {
                    string link8 = string.IsNullOrEmpty(Model.CarouselLink8) ? "#" : Model.CarouselLink8;
                    <div class="col s3 m3"><a href="@link8"><img class="responsive-img" src="@picture8Url" /></a></div>
                }
                @if (!string.IsNullOrEmpty(picture9Url))
                {
                    string link9 = string.IsNullOrEmpty(Model.CarouselLink9) ? "#" : Model.CarouselLink9;
                    <div class="col s3 m3"><a href="@link9"><img class="responsive-img" src="@picture9Url" /></a></div>
                }
                @if (!string.IsNullOrEmpty(picture10Url))
                {
                    string link10 = string.IsNullOrEmpty(Model.CarouselLink10) ? "#" : Model.CarouselLink10;
                    <div class="col s3 m3"><a href="@link10"><img class="responsive-img" src="@picture10Url" /></a></div>
                }
                @if (!string.IsNullOrEmpty(picture11Url))
                {
                    string link11 = string.IsNullOrEmpty(Model.CarouselLink11) ? "#" : Model.CarouselLink11;
                    <div class="col s3 m3"><a href="@link11"><img class="responsive-img" src="@picture11Url" /></a></div>
                }
                @if (!string.IsNullOrEmpty(picture12Url))
                {
                    string link12 = string.IsNullOrEmpty(Model.CarouselLink12) ? "#" : Model.CarouselLink12;
                    <div class="col s3 m3"><a href="@link12"><img class="responsive-img" src="@picture12Url" /></a></div>
                }
                @if (!string.IsNullOrEmpty(picture13Url))
                {
                    string link13 = string.IsNullOrEmpty(Model.CarouselLink13) ? "#" : Model.CarouselLink13;
                    <div class="col s3 m3"><a href="@link13"><img class="responsive-img" src="@picture13Url" /></a></div>
                }
                @if (!string.IsNullOrEmpty(picture14Url))
                {
                    string link14 = string.IsNullOrEmpty(Model.CarouselLink14) ? "#" : Model.CarouselLink14;
                    <div class="col s3 m3"><a href="@link14"><img class="responsive-img" src="@picture14Url" /></a></div>
                }
            </div>
        </div>
    </div>
    @if (!string.IsNullOrWhiteSpace(carouselArrow))
    {
        <style>
            @@media only screen and (max-width: 992px) {
            #teed-carousel > .slick-prev:before,
            #teed-carousel > .slick-next:before {
                content: "";
                background: url('@carouselArrow') no-repeat;
                display: block;
                width: 40px;
                height: 40px;
                background-size: contain;
            }
        }

        @@media only screen and (min-width: 992px) {
            #teed-carousel > .slick-prev:before,
            #teed-carousel > .slick-next:before {
                content: "";
                background: url('@carouselArrow') no-repeat;
                display: block;
                width: 100px;
                height: 100px;
                background-size: contain;
            }
        }

        #teed-carousel > .slick-prev {
            transform: rotate(180deg) translate(0, 50%);
        }

        #teed-carousel > .slick-next {
            top: 25%;
        }
        </style>
    }
    <style>
        #color-carousel {
            color: @textColorCarousel;
        }

        .slick-prev:before {
            color: black;
        }

        .slick-next:before {
            color: black;
        }

        .slick-slide {
            text-align: center;
        }

        .sc div {
            text-align: center;
            vertical-align: middle;
        }

        .sc img {
            margin: auto;
        }
    </style>
    <script>
        $(document).ready(function () {
            $('.responsive').slick({
                dots: false,
                infinite: true,
                speed: 300,
                slidesToShow: 4,
                slidesToScroll: 4,
                centerMode: true,
                responsive: [
                    {
                        breakpoint: 1024,
                        settings: {
                            slidesToShow: 3,
                            slidesToScroll: 3,
                            infinite: true,
                            dots: false
                        }
                    },
                    {
                        breakpoint: 600,
                        settings: {
                            slidesToShow: 2,
                            slidesToScroll: 2,
                            arrows: false
                        }
                    },
                    {
                        breakpoint: 480,
                        settings: {
                            slidesToShow: 1,
                            slidesToScroll: 1,
                            arrows: false
                        }
                    }
                    // You can unslick at a given breakpoint now by adding:
                    // settings: "unslick"
                    // instead of a settings object
                ]
            });
        });
    </script>
}

@if (!string.IsNullOrEmpty(picture2Url))
{
    @if (string.IsNullOrEmpty(Model.ParallaxLink2))
    {
        <div class="parallax-container homepage-parallax" style="margin-bottom:23px;">
            <div class="parallax">
                <img src="@picture2Url" title="@Model.ParallaxText2" />
            </div>
        </div>
    }
    else
    {
        <div class="parallax-container pointer homepage-parallax" onclick="setLocation('@Model.ParallaxLink2')">
            <div class="parallax">
                <img src="@picture2Url" title="@Model.ParallaxText2" />
            </div>
        </div>
    }
}

<div class="container">
    @*@await Component.InvokeAsync("Widget", new { widgetZone = "home_page_before_best_sellers" })
        @await Component.InvokeAsync("HomepageBestSellers")*@
</div>

@if (Model.TagsEnable)
{
    <div class="container">
        <div class="row">
            <div id="tags-container" class="col s12 m12 center">

            </div>
        </div>
    </div>
    <style>
        @@media only screen and (max-width: 601px) {
            .btn-small-tags {
                height: 22.4px;
                line-height: 22.4px;
                font-size: 10px;
            }
        }
    </style>
    <script type="text/javascript" asp-location="Footer">
        $.ajax({
            cache: false,
            url: 'Admin/HomePageImages/AllTags',
            type: 'GET',
            success: function (data) {
                var qty = @tagsQty;
                var cond = qty > 0 ? qty : data.length;

                for (var i = 0; i < data.length && i < cond; i++) {
                    var item = data[i];
                    if (item.ProductCount > 0) {
                        var str = "<a href='producttag/" + item.Id + "/" + item.Name + "' class='producttag btn-small btn-small-tags' style='margin:5px;'>" + item.Name + " (" + item.ProductCount + ")</a>";
                        $('#tags-container').append(str);
                    }
                }
            },
            error: function () {
                alert('Error de conexión');
            }
        });
    </script>
}

@if (!string.IsNullOrEmpty(picture15Url) && !string.IsNullOrEmpty(picture16Url) && !string.IsNullOrEmpty(picture17Url) && !string.IsNullOrEmpty(picture18Url))
{
    <div class="row">
        <div class="col s12 m12" style="padding:0">
            @{
                string link15 = string.IsNullOrEmpty(Model.BoxLink15) ? "#" : Model.BoxLink15;
                <div style="padding:0" class="col s6 m3"><a href="@link15"><img style="width:100%" class="responsive-img" src="@picture15Url" /></a></div>
            }
            @{
                string link16 = string.IsNullOrEmpty(Model.BoxLink16) ? "#" : Model.BoxLink16;
                <div style="padding:0" class="col s6 m3"><a href="@link16"><img style="width:100%" class="responsive-img" src="@picture16Url" /></a></div>
            }
            @{
                string link17 = string.IsNullOrEmpty(Model.BoxLink17) ? "#" : Model.BoxLink17;
                <div style="padding:0" class="col s6 m3 cajas-margin-top"><a href="@link17"><img style="width:100%" class="responsive-img" src="@picture17Url" /></a></div>
            }
            @{
                string link18 = string.IsNullOrEmpty(Model.BoxLink18) ? "#" : Model.BoxLink18;
                <div style="padding:0" class="col s6 m3 cajas-margin-top"><a href="@link18"><img style="width:100%" class="responsive-img" src="@picture18Url" /></a></div>
            }
        </div>
    </div>
    <style>
        @@media only screen and (max-width: 601px) {
            .cajas-margin-top {
                margin-top: -5px;
            }
        }
    </style>
}

<div class="container">
    @*@await Component.InvokeAsync("Widget", new { widgetZone = "home_page_before_categories" })
        @await Component.InvokeAsync("HomepageCategories")

        @await Component.InvokeAsync("Widget", new { widgetZone = "home_page_before_poll" })
        @await Component.InvokeAsync("HomepagePolls")*@
</div>

@inject IPictureService pictureService
@inject IStaticCacheManager cacheManager

@functions {
public string GetPictureUrl(int pictureId)
{
    return pictureService.GetPictureUrl(pictureId, showDefaultPicture: false) ?? "";
}
}