@model AddressModel
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    //we don't move this script to the footer as it's used in Ajax requests where footer is not available
    <script type="text/javascript" asp-location="Footer">
        $(document).ready(function () {
            $("#@Html.IdFor(model => model.CountryId)").change(function () {
            var selectedItem = $(this).val();
            var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");
            var statesProgress = $("#states-loading-progress");
            statesProgress.show();
                $.ajax({
                cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                    ddlStates.html('');
                        $.each(data, function (id, option) {
                        ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        $('select').formSelect();
                    statesProgress.hide();
                },
                    error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                    statesProgress.hide();
                }
            });
        });
        });
    </script>
}
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    //we don't move this script to the footer as it's used in Ajax requests where footer is not available
    <script type="text/javascript">
        $(document).ready(function () {
            $("#@Html.IdFor(model => model.CountryId)").change(function () {
            var selectedItem = $(this).val();
            var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");
            var statesProgress = $("#states-loading-progress");
            statesProgress.show();
                $.ajax({
                cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                    ddlStates.html('');
                        $.each(data, function (id, option) {
                        ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        $('select').formSelect();
                    statesProgress.hide();
                },
                    error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                    statesProgress.hide();
                }
            });
        });
        });
    </script>
}
<input asp-for="Id" type="hidden" />
<div class="edit-address row">
    <div class="input-field col s12 m6">
        <input asp-for="FirstName" />
        <label>*@Html.DisplayNameFor(m => m.FirstName)</label>
        <span class="helper-text red-text" asp-validation-for="FirstName"></span>
    </div>
    <div class="input-field col s12 m6">
        <input asp-for="LastName" />
        <label>*@Html.DisplayNameFor(m => m.LastName)</label>
        <span class="helper-text red-text" asp-validation-for="LastName"></span>
    </div>
    <div class="input-field col s12 m12">
        <input asp-for="Email" />
        <label>*@Html.DisplayNameFor(m => m.Email)</label>
        <span class="helper-text red-text" asp-validation-for="Email"></span>
    </div>
    @if (Model.CompanyEnabled)
    {
        string companyReq = Model.CompanyRequired ? "*" : "";
        <div class="input-field col s12 m12">
            <input asp-for="Company" />
            <label>@Html.Raw(companyReq)@Html.DisplayNameFor(m => m.Company)</label>
            <span class="helper-text red-text" asp-validation-for="Company"></span>
        </div>
    }
    @if (Model.CountryEnabled)
    {
        <div class="input-field col s12 m12">
            <select asp-for="CountryId" asp-items="Model.AvailableCountries" class="browser-default"></select>
            <label>*@Html.DisplayNameFor(m => m.CountryId)</label>
            <span class="helper-text red-text" asp-validation-for="CountryId"></span>
        </div>
    }
    @if (Model.CountryEnabled && Model.StateProvinceEnabled)
    {
        <div class="input-field col s12 m6">
            <select asp-for="StateProvinceId" asp-items="Model.AvailableStates" class="state-input browser-default"></select>
            <label>*@Html.DisplayNameFor(m => m.StateProvinceId)</label>
            <span class="helper-text red-text" asp-validation-for="StateProvinceId"></span>
            <span class="helper-text blue-text" id="states-loading-progress" style="display: none;"></span>
        </div>
    }
    @if (Model.CityEnabled)
    {
        string cityReq = Model.CityRequired ? "*" : "";
        <div class="input-field col s12 m6">
            <input asp-for="City" />
            <label>@Html.Raw(cityReq)@Html.DisplayNameFor(m => m.City)</label>
            <span class="helper-text red-text" asp-validation-for="City"></span>
        </div>
    }
    @if (Model.StreetAddressEnabled)
    {
        string add1Req = Model.StreetAddressRequired ? "*" : "";
        <div class="input-field col s12 m12">
            <input asp-for="Address1" />
            <label>@Html.Raw(add1Req)@Html.DisplayNameFor(m => m.Address1)</label>
            <span class="helper-text red-text" asp-validation-for="Address1"></span>
        </div>
    }
    @if (Model.StreetAddress2Enabled)
    {
        string add2Req = Model.StreetAddress2Required ? "*" : "";
        <div class="input-field col s12 m12">
            <input asp-for="Address2" />
            <label>@Html.Raw(add2Req)@Html.DisplayNameFor(m => m.Address2)</label>
            <span class="helper-text red-text" asp-validation-for="Address2"></span>
        </div>
    }
    @if (Model.ZipPostalCodeEnabled)
    {
        string zipReq = Model.ZipPostalCodeRequired ? "*" : "";
        <div class="input-field col s12 m6">
            <input asp-for="ZipPostalCode" />
            <label>@Html.Raw(zipReq)@Html.DisplayNameFor(m => m.ZipPostalCode)</label>
            <span class="helper-text red-text" asp-validation-for="ZipPostalCode"></span>
        </div>
    }
    @if (Model.PhoneEnabled)
    {
        string phoneReq = Model.PhoneRequired ? "*" : "";
        <div class="input-field col s12 m6">
            <input asp-for="PhoneNumber" />
            <label>@Html.Raw(phoneReq)@Html.DisplayNameFor(m => m.PhoneNumber)</label>
            <span class="helper-text red-text" asp-validation-for="PhoneNumber"></span>
        </div>
    }
    @if (Model.FaxEnabled)
    {
        string faxReq = Model.FaxRequired ? "*" : "";
        <div class="input-field col s12 m12">
            <input asp-for="FaxNumber" />
            <label>@Html.Raw(faxReq)@Html.DisplayNameFor(m => m.FaxNumber)</label>
            <span class="helper-text red-text" asp-validation-for="FaxNumber"></span>
        </div>
    }
    @if (Model.CustomAddressAttributes.Count > 0)
    {
        @await Html.PartialAsync("_AddressAttributes", Model.CustomAddressAttributes)
    }
</div>
