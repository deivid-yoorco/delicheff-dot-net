@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@inject CatalogSettings catalogSettings
@inject IWorkContext workContext
@{
    //prepare "Add to cart" AJAX link
    var addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = false/*Model.ProductPrice.ForceRedirectionAfterAddingToCart */});
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
    }

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}

<style>
    @@media (max-width: 600px) {
        .size-btn-em {
            width: 1.8em;
            height: 1.8em;
        }

        .search-results {
            margin: -2%;
        }

        .product-title-size {
            font-size: 13px;
        }

        .product-card .btn-floating.halfway-fab {
            right: 1.4em !important;
        }

        .product-card .compare {
            margin-right: 2.5em;
        }

        .product-card .shopping-cart {
            margin-right: 5em;
        }

        .btn-floating i {
            font-size: 1.3rem;
            line-height: 1em;
            vertical-align: top;
            margin-top: 28%;
        }

        .product-card a.price {
            float: none;
        }

        .center-card {
            text-align: center;
        }
    }
</style>

<div class="" style="margin-top:25px">
    <div class="row">
        <div class="col s4 m4">
            <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.Name">
                <img class="product-related" id="product_@Model.Id" alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title">
            </a>
            @if (Model.StockAvailability)
            {
                if (Model.Quantity > 1)
                {
                    <span id="text-availability" style="color:red;position: absolute;z-index: 1;margin-top: -2.3em;right:2em;">¡Sólo quedan @Model.Quantity!</span>
                }
                else
                {
                    <span id="text-availability" style="color:red;position: absolute;z-index: 1;margin-top: -2.3em;right:2em;">¡Sólo queda @Model.Quantity!</span>
                }
                <style>
                    @@media (max-width: 400px) {
                        #text-availability {
                            right: 0 !important;
                            width: 100%;
                        }
                    }
                </style>
            }
            @*@if (!Model.ProductPrice.DisableAddToCompareListButton)
                {
                    <a href="javascript:void(0)" title="@T("ShoppingCart.AddToCompareList")" onclick="AjaxCart.addproducttocomparelist('@addtocomparelink');return false;" class="btn-floating halfway-fab waves-effect waves-light compare size-btn-em">
                        <i class="material-icons">compare</i>
                    </a>
                }*@
        </div>
        <script type="text/javascript" asp-location="Footer">
            $(document).ready(function () {
                $('#btnCart-@Model.Id').click(function () {
                    setTimeout(function () {
                        $.ajax({
                        cache: false,
                        url: '@Url.Action("CartAjax", "ShoppingCart")',
                        type: 'get',
                        success: function (data) {
                            $('.pop-cart').hide();
                            $('.pop-cart').empty();
                            $('.pop-cart').append(data);
                            $('.pop-cart').show(400);
                        }
                    });
                        //$('#flyout-cart').addClass('active');
                    }, 800);
                });
            });
        </script>
        <style>
            .btn-space {
                padding: 0 !important;
            }

            .btn-width {
                width: 100% !important;
            }

            .btn-favorite {
                width: 80% !important;
                padding: 0 !important;
            }

            .center-content-card {
                height: 85px;
                width: 100%;
                display: flex;
                align-items: center;
            }

            .module {
                overflow: hidden;
            }

            .line-clamp {
                display: -webkit-box;
                -webkit-line-clamp: 3;
                -webkit-box-orient: vertical;
            }

            @@media only screen and (max-width: 1366px) {
                .btn-width {
                    font-size: 0.8em;
                }
            }

            @@media only screen and (max-width: 437px) {
                .btn-width {
                    font-size: 2.5vw;
                    font-weight: bold;
                    word-wrap: break-word;
                    line-height: 1.5em;
                    padding-top: 3%;
                }
            }

            @@media only screen and (max-width: 374px) {
                .btn-width {
                    padding-top: 4%;
                }
            }

            @@media only screen and (max-width: 345px) {
                .btn-width {
                    padding-top: 6%;
                }
            }
            /*
            @@media only screen and (max-width: 689px) {
                .old-price {
                    font-size: 0.9em !important;
                }

                .btn-width {
                    font-size: 0.75em;
                }
            }

            @@media only screen and (max-width: 634px) {
                .btn-width {
                    font-size: 0.65em;
                }
            }

            @@media only screen and (max-width: 600px) {
                #ifavorite {
                    font-size: 1rem;
                }

                .btn-width {
                    font-size: 0.80em;
                }
            }

            @@media only screen and (max-width: 513px) {
                .btn-width {
                    font-size: 0.80em;
                }
            }

            @@media only screen and (max-width: 445px) {
                .btn-width {
                    font-size: 0.7em;
                    font-weight: bold;
                    word-wrap: break-word;
                    line-height: 1.5em;
                    padding-top: 3%;
                }
            }

            @@media only screen and (max-width: 410px) {
                .btn-width {
                    font-size: 0.6em;
                }
            }

            @@media only screen and (max-width: 392px) {
                .center-content-card {
                    font-size: 0.9em;
                }
            }

            @@media only screen and (max-width: 320px) {
                .center-content-card {
                    font-size: 0.8em;
                }
            }

            @@media only screen and (max-width: 285px) {
                .btn-width {
                    font-size: 0.6em;
                    padding-top: 7%;
                }
            }

            @@media only screen and (max-width: 264px) {
                .btn-width {
                    font-size: 0.55em;
                }
            }*/
        </style>
        <div class="col s8 m8" style="padding:0 !important;">
            <div class="row" style="padding:0!important;padding-left:10px !important;">
                @{string newStyle = "";}
                @if (Nop.Services.TeedCommerceStores.CurrentStore == Nop.Services.TeedStores.Kromtek)
                {
                    newStyle = "class=\"teed-secondary-text\"";
                }
                else
                {
                    newStyle = "";
                }
                <h6>
                    <a class="product-related-title" href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" id="name-@Model.Id" title="@Model.Name" @Html.Raw(newStyle) style="text-transform:none;">
                        LAMY @Model.Name
                        @if (Model.Product.ProductSpecificationAttributes.Where(x => x.ShowOnProductPage).Any())
                        {
                            if (!string.IsNullOrEmpty(Model.Product.ProductSpecificationAttributes.Where(x => x.ShowOnProductPage).Select(x => x.CustomValue).FirstOrDefault()))
                            {
                                @Html.Raw(Model.Product.ProductSpecificationAttributes.Where(x => x.ShowOnProductPage).Select(x => x.CustomValue).FirstOrDefault())
                            }
                            else
                            {
                                @Html.Raw(Model.Product.ProductSpecificationAttributes.Where(x => x.ShowOnProductPage).Select(x => x.SpecificationAttributeOption.Name).FirstOrDefault())
                            }
                        }
                    </a>
                </h6>
            </div>
            <div class="row" style="padding:0!important;padding-left:10px !important;">
                @if (Model.Product.Price != Model.ProductPrice.PriceValue)
                {
                    <a href="@Url.RouteUrl("Product", new {SeName=Model.SeName})" id="price-left-@Model.Id" title="@Model.Name">
                        @if (!string.IsNullOrEmpty(Model.ProductPrice.BasePricePAngV))
                        {
                            @Html.Raw(Model.ProductPrice.BasePricePAngV)
                        }
                        <span class="grey-text old-price">Precio regular: $@Model.Product.Price.ToString("#.00")</span><br />
                        <strong class="text-red">Precio especial: @Model.ProductPrice.Price</strong>
                    </a>
                }
                else if (!string.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                {
                    <a href="@Url.RouteUrl("Product", new {SeName=Model.SeName})" id="price-left-@Model.Id" title="@Model.Name">
                        @if (!string.IsNullOrEmpty(Model.ProductPrice.BasePricePAngV))
                        {
                            @Html.Raw(Model.ProductPrice.BasePricePAngV)
                        }
                        <span class="text-red old-price">Precio regular: <text class="old-product-price">@Model.ProductPrice.OldPrice</text></span><br />
                        <span class="grey-text">Precio especial: <text class="product-related-price">@Model.ProductPrice.Price</text></span>
                    </a>
                }
                else
                {
                    var finalPrice = string.Empty;
                    <a href="@Url.RouteUrl("Product", new {SeName=Model.SeName})" id="price-left-@Model.Id" title="@Model.Name">
                        @if (!string.IsNullOrEmpty(Model.ProductPrice.BasePricePAngV))
                        {
                            @Html.Raw(Model.ProductPrice.BasePricePAngV)
                        }
                        @if (Model.ProductPrice.Price.Contains("$0.00"))
                        {
                            var attributes = Model.AttributeProduct.FirstOrDefault();
                            if (attributes != null)
                            {
                                if (attributes.ProductAttributeMapping.ProductAttributeValues
                                    .Where(x => x.IsPreSelected).Any())
                                {
                                    var price = attributes.ProductAttributeMapping.ProductAttributeValues
                                        .Where(x => x.IsPreSelected).FirstOrDefault();
                                    finalPrice = price.PriceAdjustment.ToString("C");
                                }
                                else
                                {
                                    var price = attributes.ProductAttributeMapping.ProductAttributeValues
                                        .FirstOrDefault();
                                    if (price != null)
                                    {
                                        finalPrice = price.PriceAdjustment.ToString("C");
                                    }
                                    else
                                    {
                                        finalPrice = Model.ProductPrice.Price;
                                    }
                                }
                            }
                            else
                            {
                                finalPrice = Model.ProductPrice.Price;
                            }
                        }
                        else
                        {
                            finalPrice = Model.ProductPrice.Price;
                        }
                        <span class="grey-text">Precio: @finalPrice</span>
                    </a>
                }
                <script>
                var src = "@Model.ProductPrice.Price";
                if (src.length > 9) {
                    $('#price-left-@Model.Id').css("margin-left", "-2px");
                }
                </script>
            </div>
            @*<div class="col s2 m2 btn-space">
                @if (!Model.ProductPrice.DisableWishlistButton)
                {
                    if (Model.AttributeProduct.Count > 0)
                    {
                        <a href="#modal-@Model.Id" title="@T("ShoppingCart.AddToWishlist")" onclick="addWish(@Model.Id)" class="modal-trigger halfway-fab wishlist waves-effect waves-light btn btn-favorite">
                                    <i id="ifavorite" class="material-icons">favorite</i>
                                </a>
                        }
                        else
                        {
                            <a href="javascript:void(0)" title="@T("ShoppingCart.AddToWishlist")" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink');return false;" id="small-favorite" class="halfway-fab wishlist waves-effect waves-light btn btn-favorite">
                                <i id="ifavorite" class="material-icons">favorite</i>
                            </a>
                        }
                    }
                </div>*@
        <div class="col s6 m6 btn-space">
            @if (!Model.ProductPrice.DisableBuyButton)
            {
                var addToCartText = T("ShoppingCart.AddToCart").Text;
                if (Model.ProductPrice.IsRental)
                {
                    addToCartText = T("ShoppingCart.Rent").Text;
                }
                if (Model.ProductPrice.AvailableForPreOrder)
                {
                    addToCartText = T("ShoppingCart.PreOrder").Text;
                }
                @*if (Model.AttributeProduct.Count > 0)
            {
                <a href="#modal-@Model.Id" title="@(addToCartText)" onclick="addCart(@Model.Id)" class="modal-trigger waves-effect waves-light btn btn-width" style="background-color: #c00; color: white;display: flex;">
                    <i class="material-icons cart-icon">shopping_cart</i><span class="small-cart text-small-cart">AGREGAR AL CARRITO</span>
                </a>
            }
            else
            {
                <a href="javascript:void(0)" title="@(addToCartText)" id="btnCart-@Model.Id" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;" class="waves-effect waves-light btn btn-width" style="background-color: #c00; color: white;display: flex;">
                    <i class="material-icons cart-icon">shopping_cart</i><span class="small-cart text-small-cart">AGREGAR AL CARRITO</span>
                </a>
            }*@
                <a href="@Url.RouteUrl("Product", new {SeName=Model.SeName})" title="@(addToCartText)" id="btnCart-@Model.Id" class="waves-effect waves-light btn btn-width" style="background-color: #c00; color: white;display: flex;">
                    <i class="material-icons cart-icon">shopping_cart</i><span class="small-cart text-small-cart">VER PRODUCTO</span>
                </a>
            }
        </div>
        </div>
    </div>
</div>
<div class="center-card btn-cards-product-box" id="btn-small" style="margin-top:-3%;">

</div>
<script>
    function addWish(id) {
        $('#add-to-wish-button-' + id).show();
        $('#mobil-add-to-wish-button-' + id).show();
        $('#add-to-cart-button-' + id).hide();
        $('#mobil-add-to-cart-button-' + id).hide();
    }

    function addCart(id) {
        $('#add-to-wish-button-' + id).hide();
        $('#mobil-add-to-wish-button-' + id).hide();
        $('#add-to-cart-button-' + id).show();
        $('#mobil-add-to-cart-button-' + id).show();
    }
</script>
<div id="modal-@Model.Id" class="modal">
    @await Html.PartialAsync("_ModalAttribute", Model)
</div>