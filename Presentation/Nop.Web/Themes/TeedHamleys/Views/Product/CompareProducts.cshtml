@model CompareProductsModel
@using Nop.Core.Domain.Orders
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.CompareProducts").Text);
    //page class
    Html.AppendPageCssClassParts("html-compare-products-page");
}
@{
    var columnWidth = "";
    if (Model.Products.Count > 0)
    {
        columnWidth = Math.Round((decimal)(100M / Model.Products.Count), 0).ToString() + "%";
    }

    var specificationAttributes = new List<ProductSpecificationModel>();
    foreach (var product in Model.Products)
    {
        foreach (var attribute in product.SpecificationAttributeModels)
        {
            if (specificationAttributes.FirstOrDefault(sa => sa.SpecificationAttributeId == attribute.SpecificationAttributeId) == null)
            {
                specificationAttributes.Add(attribute);
            }
        }
    }
}
<div class="page compare-products-page section">
    <div class="">
        <h1 class="category-page-title">@T("Products.Compare.Title")</h1>
    </div>
    <div class="page-body">
        @if (Model.Products.Count > 0)
        {
            <a href="#" onclick="setLocation('@Url.RouteUrl("ClearCompareList")')" class="clear-list btn-flat">@T("Products.Compare.Clear")</a>
            <div class="center">
                <h4>@Model.CustomProperties["RecentlyViewProducts"]</h4>
            </div>
            <div class="hide-on-small-only  table-wrapper">
                <table class="compare-products-table">
                    <tbody>
                        <tr class="remove-product">
                            <td class="empty">&nbsp;</td>
                            @foreach (var product in Model.Products)
                            {
                                <td style="width: @columnWidth; text-align:center;"></td>
                            }
                        </tr>
                        <tr class="product-picture">
                            <td class="empty">&nbsp;</td>
                            @foreach (var product in Model.Products)
                            {
                                <td style="width: @columnWidth;">
                                    <a class="picture" href="@Url.RouteUrl("Product", new { SeName = product.SeName })"><img alt="@product.DefaultPictureModel.AlternateText" src="@product.DefaultPictureModel.ImageUrl" title="@product.DefaultPictureModel.Title" class="responsive-img" /></a>
                                    <a href="javascript:void(0)" title="Eliminar de la lista" onclick="setLocation('@Url.RouteUrl("RemoveProductFromCompareList", new { productId = product.Id })')" class="btn-floating btn-small teed-primary">
                                        <i class="material-icons">clear</i>
                                    </a>
                                </td>
                            }
                        </tr>
                        <tr class="product-name">
                            <td>
                                <strong>@T("Products.Compare.Name")</strong>
                            </td>
                            @foreach (var product in Model.Products)
                            {
                                <td style="width: @columnWidth;">
                                    <a href="@Url.RouteUrl("Product", new { SeName = product.SeName })">@product.Name</a>
                                </td>
                            }
                        </tr>
                        <tr class="product-price">
                            <td>
                                <strong>@T("Products.Compare.Price")</strong>
                            </td>
                            @foreach (var product in Model.Products)
                            {
                                <td style="width: @columnWidth;">
                                    @product.ProductPrice.Price
                                </td>
                            }
                        </tr>
                        @if (Model.IncludeShortDescriptionInCompareProducts)
                        {
                            <tr class="short-description">
                                <td>
                                    <strong>@T("Products.Compare.ShortDescription")</strong>
                                </td>
                                @foreach (var product in Model.Products)
                                {
                                    <td style="width: @columnWidth;">
                                        @Html.Raw(product.ShortDescription)
                                    </td>
                                }
                            </tr>
                        }
                        @foreach (var specificationAttribute in specificationAttributes)
                        {
                            <tr class="specification">
                                <td>
                                    <strong>@specificationAttribute.SpecificationAttributeName</strong>
                                </td>
                                @foreach (var product in Model.Products)
                                {
                                    var foundProductSpec = product.SpecificationAttributeModels.FirstOrDefault(psa => psa.SpecificationAttributeId == specificationAttribute.SpecificationAttributeId);

                                    <td style="width: @columnWidth;">
                                        @if (foundProductSpec != null)
                                        {
                                            if (string.IsNullOrEmpty(foundProductSpec.ColorSquaresRgb))
                                            {
                                                @Html.Raw(foundProductSpec.ValueRaw)
                                            }
                                            else
                                            {
                                                <style>
                                                    .color-circle-attribute {
                                                        border: solid 1px #dbdbdb;
                                                        padding-left: 1em;
                                                        margin-left: 1em;
                                                        display: inline-block !important;
                                                        height: 20px !important;
                                                        margin: 6px 5px !important;
                                                        overflow: hidden;
                                                        padding: 0px !important;
                                                        width: 20px !important;
                                                    }
                                                </style>
                                                <div class="attribute-squares color-squares">
                                                    <span class="attribute-square-container" title="@Html.Raw(foundProductSpec.ValueRaw)">
                                                        <span class="attribute-square circle color-circle-attribute" style="background-color: @(foundProductSpec.ColorSquaresRgb);">&nbsp;</span>
                                                    </span>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <text>&nbsp;</text>
                                        }
                                    </td>
                                }
                            </tr>
                        }
                        @if (Model.IncludeFullDescriptionInCompareProducts)
                        {
                            <tr class="full-description">
                                <td>
                                    <strong>@T("Products.Compare.FullDescription")</strong>
                                </td>
                                @foreach (var product in Model.Products)
                                {
                                    <td style="width: @columnWidth;">
                                        @Html.Raw(product.FullDescription)
                                    </td>
                                }
                            </tr>
                        }
                        <tr>
                            <td>&nbsp;</td>
                            @foreach (var product in Model.Products)
                            {
                                <td>
                                    @{
                                        //prepare "Add to cart" AJAX link
                                        var addtocartlink = "";
                                        var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
                                        var quantity = 1;
                                        if (product.ProductPrice.ForceRedirectionAfterAddingToCart)
                                        {
                                            addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = product.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = false });
                                        }
                                        else
                                        {
                                            addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = product.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
                                        }

                                        var addToCartText = T("ShoppingCart.AddToCart").Text;
                                        if (product.ProductPrice.IsRental)
                                        {
                                            addToCartText = T("ShoppingCart.Rent").Text;
                                        }
                                        if (product.ProductPrice.AvailableForPreOrder)
                                        {
                                            addToCartText = T("ShoppingCart.PreOrder").Text;
                                        }

                                        if (product.AttributeProduct.Count > 0)
                                        {
                                            <a href="#modal-@product.Id" title="@(addToCartText)" class="modal-trigger waves-effect waves-light btn size-btn-em small-width-btn btn-add-to-cart" style="width:100%;">
                                                <span class="small-cart text-small-cart">AGREGAR AL CARRITO</span>
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="javascript:void(0)" title="@(addToCartText)" id="btnCart-@product.Id" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;" class="waves-effect waves-light btn size-btn-em small-width-btn btn-add-to-cart" style="width:100%;">
                                                <span class="small-cart text-small-cart">AGREGAR AL CARRITO</span>
                                            </a>
                                        }
                                    }
                                </td>
                            }
                        </tr>
                    </tbody>
                </table>
            </div>
            <style>
                #Foto {
                    height: 75px;
                }
            </style>
            <div class="hide-on-med-and-up table-wrapper" style="overflow-x:auto;">
                <table>
                    <thead>
                        <tr>
                            <th>&nbsp;</th>
                            @foreach (var product in Model.Products)
                            {
                                <th>
                                    <a href="@Url.RouteUrl("Product", new { SeName = product.SeName })"><img alt="@product.DefaultPictureModel.AlternateText" src="@product.DefaultPictureModel.ImageUrl" title="@product.DefaultPictureModel.Title" height="65" width="65" /></a>
                                    <a href="javascript:void(0)" title="Eliminar de la lista" onclick="setLocation('@Url.RouteUrl("RemoveProductFromCompareList", new { productId = product.Id })')" class="btn-flat primary-teed-text" style="font-size:0.7em;">
                                        Quitar
                                    </a>
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><strong>@T("Products.Compare.Name")</strong></td>
                            @foreach (var product in Model.Products)
                            {
                                <td><a href="@Url.RouteUrl("Product", new { SeName = product.SeName })">@product.Name</a></td>
                            }
                        </tr>
                        <tr>
                            <td><strong>@T("Products.Compare.Price")</strong></td>
                            @foreach (var product in Model.Products)
                            {
                                <td>@product.ProductPrice.Price</td>
                            }
                        </tr>
                        @foreach (var specificationAttribute in specificationAttributes)
                        {
                            <tr>
                                <td><strong>@specificationAttribute.SpecificationAttributeName</strong></td>
                                @foreach (var product in Model.Products)
                                {

                                    var foundProductSpec = product.SpecificationAttributeModels.FirstOrDefault(psa => psa.SpecificationAttributeId == specificationAttribute.SpecificationAttributeId);

                                    <td>
                                        @if (foundProductSpec != null)
                                        {
                                            if (string.IsNullOrEmpty(foundProductSpec.ColorSquaresRgb))
                                            {
                                                @Html.Raw(foundProductSpec.ValueRaw)
                                            }
                                            else
                                            {
                                                @*<div class="attribute-squares color-squares">
                                            <span class="attribute-square-container" title="@Html.Raw(foundProductSpec.ValueRaw)">
                                                <span class="attribute-square" style="background-color: @(foundProductSpec.ColorSquaresRgb);">&nbsp;</span>
                                            </span>
                                        </div>*@
                                                <style>
                                                    .color-circle-attribute {
                                                        border: solid 1px #dbdbdb;
                                                        padding-left: 1em;
                                                        margin-left: 1em;
                                                        display: inline-block !important;
                                                        height: 20px !important;
                                                        margin: 6px 5px !important;
                                                        overflow: hidden;
                                                        padding: 0px !important;
                                                        width: 20px !important;
                                                    }
                                                </style>
                                                <div class="attribute-squares color-squares">
                                                    <span class="attribute-square-container" title="@Html.Raw(foundProductSpec.ValueRaw)">
                                                        <span class="attribute-square circle color-circle-attribute" style="background-color: @(foundProductSpec.ColorSquaresRgb);">&nbsp;</span>
                                                    </span>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <text>&nbsp;</text>
                                        }
                                    </td>
                                }
                            </tr>
                        }
                        <tr>
                            <td>&nbsp;</td>
                            @foreach (var product in Model.Products)
                            {
                                <td>
                                    @{
                                        //prepare "Add to cart" AJAX link
                                        var addtocartlink = "";
                                        var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
                                        var quantity = 1;
                                        if (product.ProductPrice.ForceRedirectionAfterAddingToCart)
                                        {
                                            addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = product.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = false });
                                        }
                                        else
                                        {
                                            addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = product.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
                                        }

                                        var addToCartText = T("ShoppingCart.AddToCart").Text;
                                        if (product.ProductPrice.IsRental)
                                        {
                                            addToCartText = T("ShoppingCart.Rent").Text;
                                        }
                                        if (product.ProductPrice.AvailableForPreOrder)
                                        {
                                            addToCartText = T("ShoppingCart.PreOrder").Text;
                                        }

                                        if (product.AttributeProduct.Count > 0)
                                        {
                                            <a href="#modal-@product.Id" title="@(addToCartText)" class="modal-trigger waves-effect waves-light btn size-btn-em small-width-btn btn-add-to-cart" style="width:100%;">
                                                @*<span class="small-cart text-small-cart">AGREGAR AL CARRITO</span>*@
                                                <i class="material-icons">shopping_cart</i>
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="javascript:void(0)" title="@(addToCartText)" id="btnCart-@product.Id" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;" class="waves-effect waves-light btn size-btn-em small-width-btn btn-add-to-cart" style="width:100%;">
                                                @*<span class="small-cart text-small-cart">AGREGAR AL CARRITO</span>*@
                                                <i class="material-icons">shopping_cart</i>
                                            </a>
                                        }
                                    }
                                </td>
                            }
                        </tr>
                </table>
            </div>
        }
        else
        {
            <div class="no-data">
                @T("Products.Compare.NoItems")
            </div>
        }
    </div>
</div>
@foreach (var product in Model.Products)
{
    <div id="modal-@product.Id" class="modal">
        @await Html.PartialAsync("_ModalAttribute", product)
    </div>
}