@using System.Text.Encodings.Web
@{
    //success messages
    var successMessages = new List<string>();
    if (TempData[$"nop.notifications.{NotifyType.Success}"] != null)
    {
        successMessages.AddRange(TempData[$"nop.notifications.{NotifyType.Success}"] as IList<string>);
    }
    if (ViewData[$"nop.notifications.{NotifyType.Success}"] != null)
    {
        successMessages.AddRange(ViewData[$"nop.notifications.{NotifyType.Success}"] as IList<string>);
    }


    //error messages
    var errorMessages = new List<string>();
    if (TempData[$"nop.notifications.{NotifyType.Error}"] != null)
    {
        errorMessages.AddRange(TempData[$"nop.notifications.{NotifyType.Error}"] as IList<string>);
    }
    if (ViewData[$"nop.notifications.{NotifyType.Error}"] != null)
    {
        errorMessages.AddRange(ViewData[$"nop.notifications.{NotifyType.Error}"] as IList<string>);
    }


    //warning messages
    var warningMessages = new List<string>();
    if (TempData[$"nop.notifications.{NotifyType.Warning}"] != null)
    {
        warningMessages.AddRange(TempData[$"nop.notifications.{NotifyType.Warning}"] as IList<string>);
    }
    if (ViewData[$"nop.notifications.{NotifyType.Warning}"] != null)
    {
        warningMessages.AddRange(ViewData[$"nop.notifications.{NotifyType.Warning}"] as IList<string>);
    }
}

@if (successMessages.Count > 0)
{
    <script type="text/javascript" asp-location="Footer">
        $(document).ready(function () {
            var msg = [ @Html.Raw("'" + string.Join("', '", successMessages.Select(x => JavaScriptEncoder.Default.Encode(x)).ToList()) + "'")];
            displayPopupNotification(msg, 'success', false);
        });
    </script>
}
@if (errorMessages.Count > 0)
{
    <script type="text/javascript" asp-location="Footer">
        $(document).ready(function () {
            var msg = [ @Html.Raw("'" + string.Join("', '", errorMessages.Select(x => JavaScriptEncoder.Default.Encode(x)).ToList()) + "'")];
            displayPopupNotification(msg, 'error', false);
        });
    </script>
}
@if (warningMessages.Count > 0)
{
    <script type="text/javascript" asp-location="Footer">
        $(document).ready(function () {
            var msg = [ @Html.Raw("'" + string.Join("', '", warningMessages.Select(x => JavaScriptEncoder.Default.Encode(x)).ToList()) + "'")];
            displayPopupNotification(msg, 'warning', false);
        });
    </script>
}

<div class="ajax-loading">
    <div class="preloader-wrapper big active">
        <div class="spinner-layer spinner-red-kromtek-only">
            <div class="circle-clipper left">
                <div class="circle"></div>
            </div>
            <div class="gap-patch">
                <div class="circle"></div>
            </div>
            <div class="circle-clipper right">
                <div class="circle"></div>
            </div>
        </div>
    </div>
</div>
<div id="main-modal" class="modal">
    <div class="modal-content">
        <h4 id="main-modal-header"></h4>
        <div id="main-modal-content">

        </div>
    </div>
</div>

@await Component.InvokeAsync("Widget", new { widgetZone = "notifications" })