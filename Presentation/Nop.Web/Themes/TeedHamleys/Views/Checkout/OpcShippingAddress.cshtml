@model CheckoutShippingAddressModel
@inject Nop.Core.IWorkContext workContext
@inject Nop.Services.Common.IGenericAttributeService genericAttributeService
@using System.Text
<div class="checkout-data">
    @if (Model.AllowPickUpInStore && !Model.PickUpInStoreOnly && Model.PickupPoints.Any())
    {
        <div class="section pickup-in-store" style="text-align:center; margin:2em">
            <label>
                <input class="filled-in teed-primary" asp-for="PickUpInStore" type="checkbox" onclick="Shipping.togglePickUpInStore(this)" />
                <span>Recoger en tienda</span>
            </label>
            <script type="text/javascript">
                $(document).ready(function () {
                    Shipping.togglePickUpInStore($('#@Html.IdFor(model => model.PickUpInStore)'));
                });
            </script>
        </div>
    }
    @if (Model.AllowPickUpInStore)
    {
        <div class="section pickup-points" id="pickup-points-form">
            @if (Model.PickupPoints.Any())
            {
                if (Model.PickUpInStoreOnly)
                {
                    <input type="hidden" asp-for="PickUpInStore" />
                }
                <div class="select-pickup-points">
                    @if (Model.PickupPoints.Count == 1)
                    {
                        var point = Model.PickupPoints.First();
                        <input name="pickup-points-id" id="pickup-points-id" type="hidden" value="@($"{point.Id}___{point.ProviderSystemName}")" />
                        <div class="single-pickup-point">
                            <ul>
                                <li class="single-pickup-point name">@point.Name</li>
                                <li class="single-pickup-point address">@($"{point.Address} {point.City} {point.StateName} {point.CountryName}")</li>
                                @if (!string.IsNullOrEmpty(point.PickupFee))
                                {
                                    <li class="single-pickup-point fee">@point.PickupFee</li>
                                }
                            </ul>
                        </div>
                    }
                    else
                    {
                        <label for="pickup-points-select">@T("Checkout.PickupPoints.SelectPickupPoint")</label>
                        <select name="pickup-points-id" id="pickup-points-select" class="address-select" title="">
                            @foreach (var point in Model.PickupPoints)
                            {
                                var addressLine = new StringBuilder();
                                addressLine.Append(point.Name);
                                if (!string.IsNullOrEmpty(point.Address))
                                {
                                    addressLine.AppendFormat(", {0}", point.Address);
                                }
                                if (!string.IsNullOrEmpty(point.City))
                                {
                                    addressLine.AppendFormat(", {0}", point.City);
                                }
                                if (!string.IsNullOrEmpty(point.StateName))
                                {
                                    addressLine.AppendFormat(", {0}", point.StateName);
                                }
                                if (!string.IsNullOrEmpty(point.CountryName))
                                {
                                    addressLine.AppendFormat(", {0}", point.CountryName);
                                }
                                <option data-schedule="@(point.OpeningHours)" data-address="@addressLine" value="@($"{point.Id}___{point.ProviderSystemName}")">@(point.Name). @(point.Address).</option>
                            }
                        </select>
                        <div style="margin-top: 1em">
                            <strong>Podrás recoger tu pedido en:</strong>
                            <div id="pickup-info"></div>
                            <br />
                            <strong>Horarios:</strong> <span id="schedule-data"></span>
                        </div>

                        @if (string.IsNullOrWhiteSpace(workContext.CurrentCustomer.Email))
                        {
                            <div class="row" style="margin-top:2em">
                                <h5>Datos para la entrega</h5>
                                <div class="inputs col s12 m6">
                                    <label>Nombre</label>
                                    <input id="input-name-pickup" type="text" />
                                    <span class="helper-text red-text" id="name-field-pickup" style="display:none;">Este campo es obligatorio</span>
                                </div>
                                <div class="inputs col s12 m6">
                                    <label>Apellido</label>
                                    <input id="input-lastname-pickup" type="text" />
                                    <span class="helper-text red-text" id="lastName-field-pickup" style="display:none;">Este campo es obligatorio</span>
                                </div>
                                <div class="inputs col s12 m6">
                                    <label>Correo electrónico</label>
                                    <input id="input-email-pickup" type="text" style="text-align:center;" />
                                    <span class="helper-text red-text" id="email-field-pickup" style="display:none;">Este campo es obligatorio</span>
                                </div>
                                <div class="inputs col s12 m6">
                                    <label>Teléfono</label>
                                    <input id="input-phone-pickup" type="tel" style="text-align:center;" />
                                    <span class="helper-text red-text" id="phone-field-pickup" style="display:none;">Este campo es obligatorio</span>
                                </div>
                            </div>
                        }
                    }
                </div>
                if (Model.DisplayPickupPointsOnMap)
                {
                    var src = $"https://maps.googleapis.com/maps/api/js{(string.IsNullOrEmpty(Model.GoogleMapsApiKey) ? string.Empty : $"?key={Model.GoogleMapsApiKey}")}";
                    <div class="pickup-points-map" id="map">
                        <script type="text/javascript" asp-location="Footer">
                            var markers = new Map();
                            var googleMap = null;
                            $(document).ready(function () {
                                $.getScript("@src", function( data, textStatus, jqxhr ) {
                                    google.maps.visualRefresh = true;
                                    googleMap = new google.maps.Map(document.getElementById("map"), {
                                        zoom: 15,
                                        mapTypeId: google.maps.MapTypeId.ROADMAP
                                    });
                                    var geocoder = new google.maps.Geocoder();
                                    var infowindow = new google.maps.InfoWindow();
                                    @for (var i = 0; i < Model.PickupPoints.Count; i++)
                                    {
                                        var point = Model.PickupPoints[i];
                                        var value = $"{point.Id}___{point.ProviderSystemName}";
                                        var pickupPointInfo = Html.Raw($@"<div class='pickup-point-info'><ul><li><strong>{point.Name}</strong></li><li>{point.OpeningHours}</li><li>{point.PickupFee}</li></ul></div>");
                                        if (point.Latitude != null && point.Longitude != null)
                                        {
                                            <text>
                                                (function() {
                                                    var marker = new google.maps.Marker({
                                                        map: googleMap,
                                                        title: "@point.Name",
                                                        position: new google.maps.LatLng(@point.Latitude, @point.Longitude),
                                                        icon: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png"
                                                    });
                                                    markers.set("@value", marker);
                                                    google.maps.event.addListener(marker, 'click', function () {
                                                        $('#pickup-points-select').val("@value");
                                                        googleMap.setCenter(this.getPosition());
                                                        infowindow.setContent("@pickupPointInfo");
                                                        infowindow.open(googleMap, marker);
                                                    });
                                                    @if (i == 0) {
                                                        <text>googleMap.setCenter(marker.getPosition());</text>
                                                    }
                                                }());
                                            </text>
                                        }
                                        else
                                        {
                                            var address = $"{point.Address} {point.City} {point.ZipPostalCode} {point.CountryName}";
                                            <text>
                                                var interval_@i = setInterval( function () {
                                                    geocoder.geocode({'address': "@address"}, function(results, status) {
                                                        if (status === google.maps.GeocoderStatus.OK) {
                                                            var marker = new google.maps.Marker({
                                                                map: googleMap,
                                                                title: "@point.Name",
                                                                position: results[0].geometry.location,
                                                                icon: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png"
                                                            });
                                                            markers.set("@value", marker);
                                                            google.maps.event.addListener(marker, 'click', function () {
                                                                $('#pickup-points-select').val("@value");
                                                                googleMap.setCenter(this.getPosition());
                                                                infowindow.setContent("@pickupPointInfo");
                                                                infowindow.open(googleMap, marker);
                                                            });
                                                            @if (i == 0) {
                                                                <text>googleMap.setCenter(marker.getPosition());</text>
                                                            }
                                                            clearInterval(interval_@i);
                                                        }
                                                    })
                                                }, 250);
                                            </text>
                                        }
                                    }

                                    $('#pickup-points-select').change(function() {
                                        new google.maps.event.trigger(markers.get(this.value), 'click' );
                                    });

                                    $("#@Html.IdFor(model => model.PickUpInStore)").change(function() {
                                        if ($('#@Html.IdFor(model => model.PickUpInStore)').is(':checked')) {
                                            var center = googleMap.getCenter();
                                            google.maps.event.trigger(googleMap, 'resize');
                                            googleMap.setCenter(center);
                                        }
                                    })
                                })
                            })
                        </script>
                    </div>
                }
            }
            <div class="message-error">
                <ul>
                    @foreach (var warning in Model.Warnings)
                    {
                        <li>@warning</li>
                    }
                </ul>
            </div>
        </div>
    }
</div>
<script>
    $(document).ready(function () {
        $('select').formSelect();
    });
</script>